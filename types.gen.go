// Package cratedb provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.0 DO NOT EDIT.
package cratedb

import (
	"encoding/json"
	"fmt"
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for ClusterHealthRunningOperation.
const (
	ALLOWEDCIDRUPDATE    ClusterHealthRunningOperation = "ALLOWED_CIDR_UPDATE"
	BACKUPSCHEDULEUPDATE ClusterHealthRunningOperation = "BACKUP_SCHEDULE_UPDATE"
	CHANGECOMPUTE        ClusterHealthRunningOperation = "CHANGE_COMPUTE"
	CREATE               ClusterHealthRunningOperation = "CREATE"
	EXPANDSTORAGE        ClusterHealthRunningOperation = "EXPAND_STORAGE"
	PASSWORDUPDATE       ClusterHealthRunningOperation = "PASSWORD_UPDATE"
	RESTORESNAPSHOT      ClusterHealthRunningOperation = "RESTORE_SNAPSHOT"
	SCALE                ClusterHealthRunningOperation = "SCALE"
	SUSPEND              ClusterHealthRunningOperation = "SUSPEND"
	UPGRADE              ClusterHealthRunningOperation = "UPGRADE"
)

// Defines values for ClusterHealthStatus.
const (
	ClusterHealthStatusGREEN       ClusterHealthStatus = "GREEN"
	ClusterHealthStatusRED         ClusterHealthStatus = "RED"
	ClusterHealthStatusSUSPENDED   ClusterHealthStatus = "SUSPENDED"
	ClusterHealthStatusUNKNOWN     ClusterHealthStatus = "UNKNOWN"
	ClusterHealthStatusUNREACHABLE ClusterHealthStatus = "UNREACHABLE"
	ClusterHealthStatusYELLOW      ClusterHealthStatus = "YELLOW"
)

// Defines values for ClusterExportJobStatus.
const (
	ClusterExportJobStatusFAILED     ClusterExportJobStatus = "FAILED"
	ClusterExportJobStatusINPROGRESS ClusterExportJobStatus = "IN_PROGRESS"
	ClusterExportJobStatusREGISTERED ClusterExportJobStatus = "REGISTERED"
	ClusterExportJobStatusSENT       ClusterExportJobStatus = "SENT"
	ClusterExportJobStatusSUCCEEDED  ClusterExportJobStatus = "SUCCEEDED"
)

// Defines values for ClusterImportJobStatus.
const (
	ClusterImportJobStatusFAILED     ClusterImportJobStatus = "FAILED"
	ClusterImportJobStatusINPROGRESS ClusterImportJobStatus = "IN_PROGRESS"
	ClusterImportJobStatusREGISTERED ClusterImportJobStatus = "REGISTERED"
	ClusterImportJobStatusSENT       ClusterImportJobStatus = "SENT"
	ClusterImportJobStatusSUCCEEDED  ClusterImportJobStatus = "SUCCEEDED"
)

// Defines values for CreditStatus.
const (
	ACTIVE  CreditStatus = "ACTIVE"
	EXPIRED CreditStatus = "EXPIRED"
)

// Defines values for FileStatus.
const (
	PENDING  FileStatus = "PENDING"
	UPLOADED FileStatus = "UPLOADED"
)

// Defines values for OrganizationPlanType.
const (
	OrganizationPlanTypeN1 OrganizationPlanType = 1
	OrganizationPlanTypeN2 OrganizationPlanType = 2
	OrganizationPlanTypeN3 OrganizationPlanType = 3
	OrganizationPlanTypeN4 OrganizationPlanType = 4
	OrganizationPlanTypeN5 OrganizationPlanType = 5
	OrganizationPlanTypeN6 OrganizationPlanType = 6
)

// Defines values for OrganizationRoleFqn.
const (
	OrganizationRoleFqnOrgAdmin      OrganizationRoleFqn = "org_admin"
	OrganizationRoleFqnOrgMember     OrganizationRoleFqn = "org_member"
	OrganizationRoleFqnProjectAdmin  OrganizationRoleFqn = "project_admin"
	OrganizationRoleFqnProjectMember OrganizationRoleFqn = "project_member"
)

// Defines values for OrganizationEditPlanType.
const (
	OrganizationEditPlanTypeN1 OrganizationEditPlanType = 1
	OrganizationEditPlanTypeN2 OrganizationEditPlanType = 2
	OrganizationEditPlanTypeN3 OrganizationEditPlanType = 3
	OrganizationEditPlanTypeN4 OrganizationEditPlanType = 4
	OrganizationEditPlanTypeN5 OrganizationEditPlanType = 5
	OrganizationEditPlanTypeN6 OrganizationEditPlanType = 6
)

// Defines values for OrganizationRoleRoleFqn.
const (
	OrganizationRoleRoleFqnOrgAdmin  OrganizationRoleRoleFqn = "org_admin"
	OrganizationRoleRoleFqnOrgMember OrganizationRoleRoleFqn = "org_member"
)

// Defines values for PartialOrganizationRolesRoleFqn.
const (
	OrgAdmin  PartialOrganizationRolesRoleFqn = "org_admin"
	OrgMember PartialOrganizationRolesRoleFqn = "org_member"
)

// Defines values for PartialProjectRoleRoleFqn.
const (
	PartialProjectRoleRoleFqnProjectAdmin  PartialProjectRoleRoleFqn = "project_admin"
	PartialProjectRoleRoleFqnProjectMember PartialProjectRoleRoleFqn = "project_member"
)

// Defines values for ProjectBackupLocationLocationType.
const (
	S3 ProjectBackupLocationLocationType = "s3"
)

// Defines values for ProjectRoleRoleFqn.
const (
	ProjectRoleRoleFqnProjectAdmin  ProjectRoleRoleFqn = "project_admin"
	ProjectRoleRoleFqnProjectMember ProjectRoleRoleFqn = "project_member"
)

// Defines values for RegionStatus.
const (
	RegionStatusDOWN    RegionStatus = "DOWN"
	RegionStatusUNKNOWN RegionStatus = "UNKNOWN"
	RegionStatusUP      RegionStatus = "UP"
)

// Defines values for PathMetricId.
const (
	PathMetricIdCrateAvailability            PathMetricId = "crate_availability"
	PathMetricIdCrateClusterLastUserActivity PathMetricId = "crate_cluster_last_user_activity"
	PathMetricIdCrateCpuSeconds              PathMetricId = "crate_cpu_seconds"
	PathMetricIdCrateDiskUsage2              PathMetricId = "crate_disk_usage2"
	PathMetricIdCrateMemoryUsage             PathMetricId = "crate_memory_usage"
	PathMetricIdCrateQueryCount              PathMetricId = "crate_query_count"
	PathMetricIdCrateQueryDuration           PathMetricId = "crate_query_duration"
	PathMetricIdCrateUnreplicatedTables      PathMetricId = "crate_unreplicated_tables"
)

// Defines values for GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId.
const (
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateAvailability            GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_availability"
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateClusterLastUserActivity GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_cluster_last_user_activity"
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateCpuSeconds              GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_cpu_seconds"
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateDiskUsage2              GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_disk_usage2"
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateMemoryUsage             GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_memory_usage"
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateQueryCount              GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_query_count"
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateQueryDuration           GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_query_duration"
	GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricIdCrateUnreplicatedTables      GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId = "crate_unreplicated_tables"
)

// Address defines model for Address.
type Address struct {
	City       *string `json:"city,omitempty"`
	Country    *string `json:"country,omitempty"`
	Line1      *string `json:"line1,omitempty"`
	Line2      *string `json:"line2"`
	PostalCode *string `json:"postal_code,omitempty"`
}

// ApiKey defines model for ApiKey.
type ApiKey struct {
	Active   *bool       `json:"active,omitempty"`
	Dc       *DublinCore `json:"dc,omitempty"`
	Key      *string     `json:"key,omitempty"`
	LastUsed *time.Time  `json:"last_used,omitempty"`
	Secret   *string     `json:"secret,omitempty"`
	UserId   *string     `json:"user_id,omitempty"`
}

// AuditEvent defines model for AuditEvent.
type AuditEvent struct {
	Action  *string                 `json:"action,omitempty"`
	Actor   *AuditUser              `json:"actor,omitempty"`
	Context *map[string]interface{} `json:"context,omitempty"`
	Created *time.Time              `json:"created,omitempty"`
	Id      *string                 `json:"id,omitempty"`
}

// AuditUser defines model for AuditUser.
type AuditUser struct {
	Email    *string `json:"email,omitempty"`
	Id       *string `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
	Picture  *string `json:"picture,omitempty"`
	Username *string `json:"username,omitempty"`
}

// AwsSecret defines model for AwsSecret.
type AwsSecret struct {
	AccessKey *string `json:"access_key,omitempty"`
	SecretKey *string `json:"secret_key,omitempty"`
}

// AzureSecret defines model for AzureSecret.
type AzureSecret struct {
	ConnectionString *string `json:"connection_string,omitempty"`
}

// BillingInformation defines model for BillingInformation.
type BillingInformation struct {
	Address   *Address             `json:"address,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	Name      *string              `json:"name,omitempty"`
	TaxId     *string              `json:"tax_id"`
	TaxIdType *string              `json:"tax_id_type"`
}

// BlobsList defines model for BlobsList.
type BlobsList struct {
	Blobs         *[]string `json:"blobs,omitempty"`
	ContainerName *string   `json:"container_name,omitempty"`
	Error         *string   `json:"error"`
	Prefix        *string   `json:"prefix"`
	SecretId      *string   `json:"secret_id,omitempty"`
}

// Bucket defines model for Bucket.
type Bucket struct {
	Name string `json:"name"`
}

// BucketsList defines model for BucketsList.
type BucketsList struct {
	Buckets []Bucket `json:"buckets"`
	Error   *string  `json:"error"`
}

// CardEdit defines model for CardEdit.
type CardEdit struct {
	Default bool `json:"default"`
}

// Cluster defines model for Cluster.
type Cluster struct {
	AllowCustomStorage *bool       `json:"allow_custom_storage,omitempty"`
	AllowSuspend       *bool       `json:"allow_suspend,omitempty"`
	BackupSchedule     *string     `json:"backup_schedule,omitempty"`
	Channel            *string     `json:"channel,omitempty"`
	CrateVersion       string      `json:"crate_version"`
	Dc                 *DublinCore `json:"dc,omitempty"`
	DeletionProtected  *bool       `json:"deletion_protected,omitempty"`
	ExternalIp         *string     `json:"external_ip,omitempty"`

	// Fqdn Fully Qualified Domain Name. Note the trailing dot.
	Fqdn          *string        `json:"fqdn,omitempty"`
	GcAvailable   *bool          `json:"gc_available,omitempty"`
	HardwareSpecs *HardwareSpecs `json:"hardware_specs"`
	Health        *struct {
		LastSeen *time.Time `json:"last_seen,omitempty"`

		// RunningOperation The type of the currently running operation. Returns an empty string if there is no operation in progress.
		RunningOperation *ClusterHealthRunningOperation `json:"running_operation,omitempty"`
		Status           *ClusterHealthStatus           `json:"status,omitempty"`
	} `json:"health,omitempty"`
	Id                 *string                       `json:"id,omitempty"`
	IpWhitelist        *[]ClusterIpWhitelist         `json:"ip_whitelist,omitempty"`
	LastAsyncOperation *PartialClusterAsyncOperation `json:"last_async_operation,omitempty"`
	Name               string                        `json:"name"`
	NumNodes           *int                          `json:"num_nodes,omitempty"`
	Origin             *string                       `json:"origin,omitempty"`
	Password           *string                       `json:"password,omitempty"`
	ProductName        string                        `json:"product_name"`
	ProductTier        string                        `json:"product_tier"`
	ProductUnit        *int                          `json:"product_unit,omitempty"`
	ProjectId          string                        `json:"project_id"`
	SubscriptionId     *string                       `json:"subscription_id,omitempty"`
	Suspended          *bool                         `json:"suspended,omitempty"`
	Url                *string                       `json:"url,omitempty"`
	Username           string                        `json:"username"`
}

// ClusterHealthRunningOperation The type of the currently running operation. Returns an empty string if there is no operation in progress.
type ClusterHealthRunningOperation string

// ClusterHealthStatus defines model for Cluster.Health.Status.
type ClusterHealthStatus string

// ClusterAsyncOperation defines model for ClusterAsyncOperation.
type ClusterAsyncOperation struct {
	Dc           *DublinCore             `json:"dc,omitempty"`
	Entity       *string                 `json:"entity,omitempty"`
	EntityId     *string                 `json:"entity_id,omitempty"`
	FeedbackData *map[string]interface{} `json:"feedback_data,omitempty"`
	Id           *string                 `json:"id,omitempty"`

	// NonSensitiveData Depending on the type of the operation, it contains the following data:
	// - SCALE: current_product_unit, current_num_nodes, target_product_unit and target_num_nodes
	// - UPGRADE: current_version and target_version- ALLOWED_CIDR_UPDATE: current_ip_whitelist and target_ip_whitelist
	NonSensitiveData *map[string]interface{} `json:"non_sensitive_data,omitempty"`
	Status           *string                 `json:"status,omitempty"`
	Type             *string                 `json:"type,omitempty"`
}

// ClusterAsyncOperationsList defines model for ClusterAsyncOperationsList.
type ClusterAsyncOperationsList struct {
	Operations *[]ClusterAsyncOperation `json:"operations,omitempty"`
}

// ClusterBackupSchedule defines model for ClusterBackupSchedule.
type ClusterBackupSchedule struct {
	BackupHours string `json:"backup_hours"`
}

// ClusterDataJobAzureBlob defines model for ClusterDataJobAzureBlob.
type ClusterDataJobAzureBlob struct {
	BlobName      string `json:"blob_name"`
	ContainerName string `json:"container_name"`
	SecretId      string `json:"secret_id"`
}

// ClusterDataJobFile defines model for ClusterDataJobFile.
type ClusterDataJobFile struct {
	DownloadUrl *string `json:"download_url,omitempty"`
	FileSize    *int    `json:"file_size,omitempty"`
	Id          string  `json:"id"`
	Name        *string `json:"name,omitempty"`
	Status      *string `json:"status,omitempty"`
	UploadUrl   *string `json:"upload_url,omitempty"`
}

// ClusterDataJobS3 defines model for ClusterDataJobS3.
type ClusterDataJobS3 struct {
	Bucket   string  `json:"bucket"`
	Endpoint *string `json:"endpoint,omitempty"`
	FilePath string  `json:"file_path"`
	SecretId string  `json:"secret_id"`
}

// ClusterDeletionProtection defines model for ClusterDeletionProtection.
type ClusterDeletionProtection struct {
	DeletionProtected bool `json:"deletion_protected"`
}

// ClusterEdit defines model for ClusterEdit.
type ClusterEdit struct {
	Password *string `json:"password,omitempty"`
}

// ClusterExportJob defines model for ClusterExportJob.
type ClusterExportJob struct {
	ClusterId   *string                     `json:"cluster_id,omitempty"`
	Compression *string                     `json:"compression"`
	Dc          *DublinCore                 `json:"dc,omitempty"`
	Destination ClusterExportJobDestination `json:"destination"`
	Id          *string                     `json:"id,omitempty"`
	Progress    *map[string]interface{}     `json:"progress,omitempty"`
	Source      ClusterExportJobSource      `json:"source"`
	Status      *ClusterExportJobStatus     `json:"status,omitempty"`
}

// ClusterExportJobStatus defines model for ClusterExportJob.Status.
type ClusterExportJobStatus string

// ClusterExportJobDestination defines model for ClusterExportJobDestination.
type ClusterExportJobDestination struct {
	File   *ClusterDataJobFile `json:"file,omitempty"`
	Format string              `json:"format"`
}

// ClusterExportJobSource defines model for ClusterExportJobSource.
type ClusterExportJobSource struct {
	Table string `json:"table"`
}

// ClusterImportJob defines model for ClusterImportJob.
type ClusterImportJob struct {
	Azureblob   *ClusterDataJobAzureBlob    `json:"azureblob,omitempty"`
	ClusterId   *string                     `json:"cluster_id,omitempty"`
	Compression *string                     `json:"compression"`
	Dc          *DublinCore                 `json:"dc,omitempty"`
	Destination ClusterImportJobDestination `json:"destination"`
	File        *ClusterDataJobFile         `json:"file,omitempty"`
	Format      string                      `json:"format"`
	Id          *string                     `json:"id,omitempty"`
	Progress    *map[string]interface{}     `json:"progress,omitempty"`
	S3          *ClusterDataJobS3           `json:"s3,omitempty"`
	Schema      *map[string]interface{}     `json:"schema"`
	Status      *ClusterImportJobStatus     `json:"status,omitempty"`
	Type        string                      `json:"type"`
	Url         *ClusterImportJobSourceURL  `json:"url,omitempty"`
}

// ClusterImportJobStatus defines model for ClusterImportJob.Status.
type ClusterImportJobStatus string

// ClusterImportJobDestination defines model for ClusterImportJobDestination.
type ClusterImportJobDestination struct {
	CreateTable     *bool                              `json:"create_table,omitempty"`
	Table           string                             `json:"table"`
	TableDefinition *[]ClusterImportJobTableDefinition `json:"table_definition"`
}

// ClusterImportJobSourceURL defines model for ClusterImportJobSourceURL.
type ClusterImportJobSourceURL struct {
	Url string `json:"url"`
}

// ClusterImportJobTableDefinition defines model for ClusterImportJobTableDefinition.
type ClusterImportJobTableDefinition struct {
	Extra *string `json:"extra"`
	Name  string  `json:"name"`
	Type  string  `json:"type"`
}

// ClusterIpWhitelist defines model for ClusterIpWhitelist.
type ClusterIpWhitelist struct {
	Cidr        string  `json:"cidr"`
	Description *string `json:"description,omitempty"`
}

// ClusterIpWhitelistEdit defines model for ClusterIpWhitelistEdit.
type ClusterIpWhitelistEdit struct {
	IpWhitelist []ClusterIpWhitelist `json:"ip_whitelist"`
}

// ClusterJWTToken defines model for ClusterJWTToken.
type ClusterJWTToken struct {
	Expiry  *time.Time `json:"expiry,omitempty"`
	Refresh *string    `json:"refresh,omitempty"`
	Token   *string    `json:"token,omitempty"`
}

// ClusterPricing defines model for ClusterPricing.
type ClusterPricing struct {
	PricePerHour   *float32          `json:"price_per_hour,omitempty"`
	PricePerMonth  *float32          `json:"price_per_month,omitempty"`
	PromotionPrice *PricingPromotion `json:"promotion_price,omitempty"`
}

// ClusterProduct defines model for ClusterProduct.
type ClusterProduct struct {
	ProductName string `json:"product_name"`
}

// ClusterProvision defines model for ClusterProvision.
type ClusterProvision struct {
	Cluster        PartialCluster  `json:"cluster"`
	Project        *PartialProject `json:"project,omitempty"`
	ProjectId      *string         `json:"project_id,omitempty"`
	SubscriptionId string          `json:"subscription_id"`
}

// ClusterScale defines model for ClusterScale.
type ClusterScale struct {
	ProductUnit int `json:"product_unit"`
}

// ClusterSnapshot defines model for ClusterSnapshot.
type ClusterSnapshot struct {
	ClusterId       *string     `json:"cluster_id,omitempty"`
	ConcreteIndices *[]string   `json:"concrete_indices,omitempty"`
	Created         *time.Time  `json:"created,omitempty"`
	Dc              *DublinCore `json:"dc,omitempty"`
	ProjectId       *string     `json:"project_id,omitempty"`
	Repository      *string     `json:"repository,omitempty"`
	Snapshot        *string     `json:"snapshot,omitempty"`
	Tables          *[]string   `json:"tables,omitempty"`
}

// ClusterSnapshotRestore defines model for ClusterSnapshotRestore.
type ClusterSnapshotRestore struct {
	Repository      string    `json:"repository"`
	Sections        *[]string `json:"sections,omitempty"`
	Snapshot        string    `json:"snapshot"`
	SourceClusterId *string   `json:"source_cluster_id,omitempty"`
	Tables          *[]string `json:"tables,omitempty"`
	Type            *string   `json:"type,omitempty"`
}

// ClusterStorageExpand defines model for ClusterStorageExpand.
type ClusterStorageExpand struct {
	DiskSizePerNodeBytes *int `json:"disk_size_per_node_bytes"`
}

// ClusterSuspend defines model for ClusterSuspend.
type ClusterSuspend struct {
	Suspended bool `json:"suspended"`
}

// ClusterUpgrade defines model for ClusterUpgrade.
type ClusterUpgrade struct {
	CrateVersion string `json:"crate_version"`
}

// ConfigurationItem defines model for ConfigurationItem.
type ConfigurationItem struct {
	Key            *string `json:"key,omitempty"`
	OrganizationId *string `json:"organization_id"`
	UserId         *string `json:"user_id"`
	Value          string  `json:"value"`
}

// ConfirmationToken defines model for ConfirmationToken.
type ConfirmationToken struct {
	Token *string `json:"token,omitempty"`
}

// Consumption defines model for Consumption.
type Consumption struct {
	Cost     *float32 `json:"cost,omitempty"`
	Credits  *float32 `json:"credits,omitempty"`
	Dtuhours *float32 `json:"dtuhours,omitempty"`
	Minutes  *int     `json:"minutes,omitempty"`
	Total    *float32 `json:"total,omitempty"`
}

// ConsumptionPerProduct defines model for ConsumptionPerProduct.
type ConsumptionPerProduct struct {
	Consumption *Consumption `json:"consumption,omitempty"`
	ProductName *string      `json:"product_name,omitempty"`
}

// Container defines model for Container.
type Container struct {
	Name *string `json:"name,omitempty"`
}

// ContainersList defines model for ContainersList.
type ContainersList struct {
	Containers *[]Container `json:"containers,omitempty"`
	Error      *string      `json:"error"`
	SecretId   *string      `json:"secret_id,omitempty"`
}

// CrateDBChannels defines model for CrateDBChannels.
type CrateDBChannels struct {
	Nightly *NightlyCrateDBVersion `json:"nightly,omitempty"`
	Stable  *CrateDBVersion        `json:"stable,omitempty"`
	Testing *CrateDBVersion        `json:"testing,omitempty"`
}

// CrateDBVersion defines model for CrateDBVersion.
type CrateDBVersion struct {
	Hotfix  *int    `json:"hotfix,omitempty"`
	Major   *int    `json:"major,omitempty"`
	Minor   *int    `json:"minor,omitempty"`
	Version *string `json:"version,omitempty"`
}

// CrateDBVersions defines model for CrateDBVersions.
type CrateDBVersions struct {
	CrateVersions *CrateDBChannels `json:"crate_versions,omitempty"`
}

// Credit defines model for Credit.
type Credit struct {
	// Amount Credit amount in USD cents
	Amount         *float32   `json:"amount,omitempty"`
	Comment        *string    `json:"comment"`
	ExpirationDate *time.Time `json:"expiration_date,omitempty"`
	Id             *string    `json:"id,omitempty"`

	// OriginalAmount Credit amount in USD cents
	OriginalAmount *int `json:"original_amount,omitempty"`

	// RemainingAmount Remaining credit amount in USD cents
	RemainingAmount *int          `json:"remaining_amount,omitempty"`
	StartDate       *time.Time    `json:"start_date,omitempty"`
	Status          *CreditStatus `json:"status,omitempty"`
}

// CreditStatus defines model for Credit.Status.
type CreditStatus string

// CurrentEstimatedCost defines model for CurrentEstimatedCost.
type CurrentEstimatedCost struct {
	Hourly  *map[string]float32 `json:"hourly,omitempty"`
	Monthly *map[string]float32 `json:"monthly,omitempty"`
}

// CurrentUser defines model for CurrentUser.
type CurrentUser struct {
	Email       openapi_types.Email `json:"email"`
	Hmac        *string             `json:"hmac,omitempty"`
	Idp         *string             `json:"idp,omitempty"`
	IsSuperuser *bool               `json:"is_superuser,omitempty"`
	Name        *string             `json:"name,omitempty"`
	// Deprecated:
	OrganizationId    *string                     `json:"organization_id,omitempty"`
	OrganizationRoles *[]PartialOrganizationRoles `json:"organization_roles,omitempty"`
	Picture           *string                     `json:"picture,omitempty"`
	ProjectRoles      *[]PartialProjectRole       `json:"project_roles,omitempty"`
	Status            *string                     `json:"status,omitempty"`
	Uid               *string                     `json:"uid,omitempty"`
	Username          *string                     `json:"username,omitempty"`
}

// Customer defines model for Customer.
type Customer struct {
	Address        *CustomerAddress    `json:"address,omitempty"`
	City           *string             `json:"city,omitempty"`
	Country        *string             `json:"country,omitempty"`
	Email          openapi_types.Email `json:"email"`
	Line1          *string             `json:"line1,omitempty"`
	Line2          *string             `json:"line2"`
	Name           string              `json:"name"`
	OrganizationId *string             `json:"organization_id,omitempty"`
	Phone          string              `json:"phone"`
	PostalCode     *string             `json:"postal_code,omitempty"`
	Tax            *CustomerTax        `json:"tax,omitempty"`
	TaxId          *string             `json:"tax_id"`
	TaxIdType      *string             `json:"tax_id_type"`
}

// CustomerAddress defines model for CustomerAddress.
type CustomerAddress struct {
	City       *string `json:"city,omitempty"`
	Country    *string `json:"country,omitempty"`
	Line1      *string `json:"line1,omitempty"`
	Line2      *string `json:"line2,omitempty"`
	PostalCode *string `json:"postal_code,omitempty"`
}

// CustomerCard defines model for CustomerCard.
type CustomerCard struct {
	Brand    *string `json:"brand,omitempty"`
	Country  *string `json:"country,omitempty"`
	Default  *bool   `json:"default,omitempty"`
	ExpMonth *int    `json:"exp_month,omitempty"`
	ExpYear  *int    `json:"exp_year,omitempty"`
	Id       *string `json:"id,omitempty"`
	Last4    *string `json:"last4,omitempty"`
}

// CustomerTax defines model for CustomerTax.
type CustomerTax struct {
	TaxId     *string `json:"tax_id,omitempty"`
	TaxIdType *string `json:"tax_id_type,omitempty"`
}

// DataJobData defines model for DataJobData.
type DataJobData struct {
	Details  *map[string]interface{} `json:"details"`
	JobId    string                  `json:"job_id"`
	Message  string                  `json:"message"`
	Progress Progress                `json:"progress"`
}

// Discount defines model for Discount.
type Discount struct {
	Amount *int    `json:"amount,omitempty"`
	Label  *string `json:"label,omitempty"`
}

// DublinCore defines model for DublinCore.
type DublinCore struct {
	Created  *time.Time `json:"created,omitempty"`
	Modified *time.Time `json:"modified,omitempty"`
}

// EditApiKeySchema defines model for EditApiKeySchema.
type EditApiKeySchema struct {
	Active *bool `json:"active,omitempty"`
}

// FeatureFlags defines model for FeatureFlags.
type FeatureFlags struct {
	Flags *[]Flag `json:"flags"`
}

// File defines model for File.
type File struct {
	Dc          *DublinCore `json:"dc,omitempty"`
	DownloadUrl *string     `json:"download_url,omitempty"`

	// FileSize File size in bytes.
	FileSize       *int        `json:"file_size,omitempty"`
	Id             *string     `json:"id,omitempty"`
	Name           string      `json:"name"`
	OrganizationId *string     `json:"organization_id,omitempty"`
	Status         *FileStatus `json:"status,omitempty"`
	UploadUrl      *string     `json:"upload_url,omitempty"`
}

// FileStatus defines model for File.Status.
type FileStatus string

// FileFeedback defines model for FileFeedback.
type FileFeedback struct {
	Bytes         *int     `json:"bytes"`
	FailedRecords *int     `json:"failed_records"`
	Message       *string  `json:"message"`
	Name          string   `json:"name"`
	Percent       *float32 `json:"percent"`
	Records       int      `json:"records"`
	Status        string   `json:"status"`
	TotalRecords  *int     `json:"total_records"`
}

// Flag defines model for Flag.
type Flag struct {
	IsActive *bool   `json:"is_active,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// Guarantee defines model for Guarantee.
type Guarantee struct {
	DiskSpaceBytes *interface{} `json:"disk_space_bytes,omitempty"`
	InsertsSecond  *int         `json:"inserts_second,omitempty"`
	QueriesSecond  *int         `json:"queries_second,omitempty"`
	StorageBytes   *interface{} `json:"storage_bytes,omitempty"`
}

// HardwareSpecs defines model for HardwareSpecs.
type HardwareSpecs struct {
	CpusPerNode          *float32 `json:"cpus_per_node"`
	DiskSizePerNodeBytes *int     `json:"disk_size_per_node_bytes"`
	DiskType             *string  `json:"disk_type"`
	DisksPerNode         *int     `json:"disks_per_node,omitempty"`
	HeapSizeBytes        *int     `json:"heap_size_bytes,omitempty"`
	MemoryPerNodeBytes   *int     `json:"memory_per_node_bytes"`
}

// IPAddress defines model for IPAddress.
type IPAddress struct {
	// Ip The IP address of the user
	Ip *string `json:"ip,omitempty"`
}

// InstallToken defines model for InstallToken.
type InstallToken struct {
	Token string `json:"token"`
}

// InvoiceConsumption defines model for InvoiceConsumption.
type InvoiceConsumption struct {
	Currency            *string     `json:"currency"`
	Discounts           *[]Discount `json:"discounts,omitempty"`
	PeriodEnd           *time.Time  `json:"period_end,omitempty"`
	PeriodStart         *time.Time  `json:"period_start,omitempty"`
	Subtotal            *int        `json:"subtotal,omitempty"`
	Total               *int        `json:"total,omitempty"`
	TotalDiscountAmount *int        `json:"total_discount_amount,omitempty"`
}

// JWK defines model for JWK.
type JWK struct {
	Keys *[]map[string]interface{} `json:"keys,omitempty"`
}

// JWTRefreshToken defines model for JWTRefreshToken.
type JWTRefreshToken struct {
	RefreshToken string `json:"refresh_token"`
}

// LatestCrateVersion defines model for LatestCrateVersion.
type LatestCrateVersion struct {
	// Nightly The latest nightly CrateDB version. This can be deployed if the nightly channel is specified.
	Nightly *string `json:"nightly,omitempty"`

	// Stable The latest stable CrateDB version. This will be used by default in all new deployments.
	Stable *string `json:"stable,omitempty"`

	// Testing The latest testing CrateDB version. This can be deployed if the testing channel is specified.
	Testing *string `json:"testing,omitempty"`
}

// Meta defines model for Meta.
type Meta struct {
	CrateVersions *LatestCrateVersion `json:"crate_versions,omitempty"`
	Version       *Version            `json:"version,omitempty"`
}

// NestedSecret defines model for NestedSecret.
type NestedSecret struct {
	AwsSecret            *AwsSecret             `json:"aws_secret,omitempty"`
	AzureSecret          *AzureSecret           `json:"azure_secret,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// NewApiKeyResponseSchema defines model for NewApiKeyResponseSchema.
type NewApiKeyResponseSchema struct {
	Key     *ApiKey `json:"key,omitempty"`
	Secret  *string `json:"secret,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// NewApiKeySchema defines model for NewApiKeySchema.
type NewApiKeySchema struct {
	Active   *bool       `json:"active,omitempty"`
	Dc       *DublinCore `json:"dc,omitempty"`
	Key      *string     `json:"key,omitempty"`
	LastUsed *time.Time  `json:"last_used,omitempty"`
	Secret   *string     `json:"secret,omitempty"`
	UserId   *string     `json:"user_id,omitempty"`
}

// NightlyCrateDBVersion defines model for NightlyCrateDBVersion.
type NightlyCrateDBVersion struct {
	Date    *string `json:"date,omitempty"`
	Hotfix  *int    `json:"hotfix,omitempty"`
	Major   *int    `json:"major,omitempty"`
	Minor   *int    `json:"minor,omitempty"`
	Version *string `json:"version,omitempty"`
}

// ObjectsList defines model for ObjectsList.
type ObjectsList struct {
	Error   *string  `json:"error"`
	Objects []string `json:"objects"`
}

// Organization defines model for Organization.
type Organization struct {
	Dc *DublinCore `json:"dc,omitempty"`

	// Email Notification email to use for the organization.
	Email                *openapi_types.Email `json:"email,omitempty"`
	Id                   *string              `json:"id,omitempty"`
	Name                 string               `json:"name"`
	NotificationsEnabled *bool                `json:"notifications_enabled,omitempty"`

	// PlanType The support plan to use for the organization.
	PlanType     *OrganizationPlanType `json:"plan_type,omitempty"`
	ProjectCount *int                  `json:"project_count,omitempty"`
	RoleFqn      *OrganizationRoleFqn  `json:"role_fqn,omitempty"`
}

// OrganizationPlanType The support plan to use for the organization.
type OrganizationPlanType int

// OrganizationRoleFqn defines model for Organization.RoleFqn.
type OrganizationRoleFqn string

// OrganizationCurrentConsumptionSchema defines model for OrganizationCurrentConsumptionSchema.
type OrganizationCurrentConsumptionSchema struct {
	ComputeConsumptionThisMonth *[]ConsumptionPerProduct `json:"compute_consumption_this_month,omitempty"`
	CurrentCost                 *CurrentEstimatedCost    `json:"current_cost,omitempty"`
	StorageConsumptionThisMonth *StorageConsumption      `json:"storage_consumption_this_month,omitempty"`
}

// OrganizationEdit defines model for OrganizationEdit.
type OrganizationEdit struct {
	// Email Notification email to use for the organization.
	Email                *openapi_types.Email `json:"email"`
	Id                   *string              `json:"id,omitempty"`
	Name                 *string              `json:"name,omitempty"`
	NotificationsEnabled *bool                `json:"notifications_enabled,omitempty"`

	// PlanType The support plan to use for the organization.
	PlanType *OrganizationEditPlanType `json:"plan_type,omitempty"`
}

// OrganizationEditPlanType The support plan to use for the organization.
type OrganizationEditPlanType int

// OrganizationInvitation defines model for OrganizationInvitation.
type OrganizationInvitation struct {
	Email             *openapi_types.Email        `json:"email,omitempty"`
	ExpirationDate    *time.Time                  `json:"expiration_date,omitempty"`
	OrganizationRoles *[]PartialOrganizationRoles `json:"organization_roles,omitempty"`
	Status            *string                     `json:"status,omitempty"`
	Uid               *string                     `json:"uid,omitempty"`
}

// OrganizationRemainingBudget defines model for OrganizationRemainingBudget.
type OrganizationRemainingBudget struct {
	ExcludeClusterId        *string  `json:"exclude_cluster_id,omitempty"`
	RemainingBudgetPerMonth *float32 `json:"remaining_budget_per_month,omitempty"`
}

// OrganizationRole defines model for OrganizationRole.
type OrganizationRole struct {
	Added          *bool                   `json:"added,omitempty"`
	Invited        *bool                   `json:"invited,omitempty"`
	OrganizationId *string                 `json:"organization_id,omitempty"`
	RoleFqn        OrganizationRoleRoleFqn `json:"role_fqn"`
	User           *string                 `json:"user,omitempty"`
	UserId         *string                 `json:"user_id,omitempty"`
}

// OrganizationRoleRoleFqn defines model for OrganizationRole.RoleFqn.
type OrganizationRoleRoleFqn string

// OrganizationUser defines model for OrganizationUser.
type OrganizationUser struct {
	Email             openapi_types.Email         `json:"email"`
	Idp               *string                     `json:"idp,omitempty"`
	Name              *string                     `json:"name,omitempty"`
	OrganizationRoles *[]PartialOrganizationRoles `json:"organization_roles,omitempty"`
	Picture           *string                     `json:"picture,omitempty"`
	Uid               *string                     `json:"uid,omitempty"`
	Username          *string                     `json:"username,omitempty"`
}

// PartialCluster defines model for PartialCluster.
type PartialCluster struct {
	Channel       *string        `json:"channel,omitempty"`
	CrateVersion  string         `json:"crate_version"`
	HardwareSpecs *HardwareSpecs `json:"hardware_specs"`
	Name          string         `json:"name"`
	Password      *string        `json:"password,omitempty"`
	ProductName   string         `json:"product_name"`
	ProductTier   string         `json:"product_tier"`
	ProductUnit   *int           `json:"product_unit,omitempty"`
	Username      string         `json:"username"`
}

// PartialClusterAsyncOperation defines model for PartialClusterAsyncOperation.
type PartialClusterAsyncOperation struct {
	Dc     *DublinCore `json:"dc,omitempty"`
	Id     *string     `json:"id,omitempty"`
	Status *string     `json:"status,omitempty"`
	Type   *string     `json:"type,omitempty"`
}

// PartialOrganizationRoles defines model for PartialOrganizationRoles.
type PartialOrganizationRoles struct {
	OrganizationId *string                         `json:"organization_id,omitempty"`
	RoleFqn        PartialOrganizationRolesRoleFqn `json:"role_fqn"`
}

// PartialOrganizationRolesRoleFqn defines model for PartialOrganizationRoles.RoleFqn.
type PartialOrganizationRolesRoleFqn string

// PartialProject defines model for PartialProject.
type PartialProject struct {
	// BackupLocation Specify a custom backup location (custom s3 bucket) for a project. Supported in Edge regions only.
	BackupLocation *ProjectBackupLocation `json:"backup_location"`
	Name           *string                `json:"name,omitempty"`
	Region         *string                `json:"region,omitempty"`
}

// PartialProjectRole defines model for PartialProjectRole.
type PartialProjectRole struct {
	ProjectId *string                   `json:"project_id,omitempty"`
	RoleFqn   PartialProjectRoleRoleFqn `json:"role_fqn"`
}

// PartialProjectRoleRoleFqn defines model for PartialProjectRole.RoleFqn.
type PartialProjectRoleRoleFqn string

// PaymentMethod defines model for PaymentMethod.
type PaymentMethod struct {
	Card           *CustomerCard `json:"card,omitempty"`
	IsAvailable    *bool         `json:"is_available,omitempty"`
	IsSetup        *bool         `json:"is_setup,omitempty"`
	Subscription   *Subscription `json:"subscription,omitempty"`
	SubscriptionId *string       `json:"subscription_id,omitempty"`
	Type           *string       `json:"type,omitempty"`
}

// PricingPromotion defines model for PricingPromotion.
type PricingPromotion struct {
	PricePerHour      *float32 `json:"price_per_hour,omitempty"`
	PricePerMonth     *float32 `json:"price_per_month,omitempty"`
	PromotionDuration *int     `json:"promotion_duration,omitempty"`
}

// Product defines model for Product.
type Product struct {
	Deprecated        *bool          `json:"deprecated,omitempty"`
	Description       *string        `json:"description,omitempty"`
	GuaranteesPerDtu  *Guarantee     `json:"guarantees_per_dtu,omitempty"`
	Kind              *string        `json:"kind,omitempty"`
	Label             *string        `json:"label,omitempty"`
	Name              *string        `json:"name,omitempty"`
	Offer             *string        `json:"offer,omitempty"`
	Plan              *string        `json:"plan,omitempty"`
	PricePerDtuMinute *int           `json:"price_per_dtu_minute,omitempty"`
	Region            *string        `json:"region,omitempty"`
	ScaleSummary      *string        `json:"scale_summary,omitempty"`
	Scaling           *[]ScaleOption `json:"scaling,omitempty"`
	Specs             *Spec          `json:"specs,omitempty"`
	Tags              *[]string      `json:"tags,omitempty"`
	Tier              *string        `json:"tier,omitempty"`
}

// ProductPricing defines model for ProductPricing.
type ProductPricing struct {
	ClusterPrice *ClusterPricing `json:"cluster_price,omitempty"`
	StoragePrice *ClusterPricing `json:"storage_price,omitempty"`
	TotalPrice   *ClusterPricing `json:"total_price,omitempty"`
}

// Progress defines model for Progress.
type Progress struct {
	Bytes          *int            `json:"bytes"`
	FailedFiles    *int            `json:"failed_files,omitempty"`
	FailedRecords  *int            `json:"failed_records"`
	Files          *[]FileFeedback `json:"files,omitempty"`
	Percent        *float32        `json:"percent"`
	ProcessedFiles *int            `json:"processed_files,omitempty"`
	Records        int             `json:"records"`
	TotalFiles     *int            `json:"total_files,omitempty"`
	TotalRecords   *int            `json:"total_records"`
}

// Project defines model for Project.
type Project struct {
	// BackupLocation Specify a custom backup location (custom s3 bucket) for a project. Supported in Edge regions only.
	BackupLocation *ProjectBackupLocation `json:"backup_location"`
	Dc             *DublinCore            `json:"dc,omitempty"`
	Id             *string                `json:"id,omitempty"`
	Name           string                 `json:"name"`
	OrganizationId string                 `json:"organization_id"`
	Region         *string                `json:"region,omitempty"`
}

// ProjectBackupLocation defines model for ProjectBackupLocation.
type ProjectBackupLocation struct {
	AdditionalConfig *map[string]interface{}           `json:"additional_config,omitempty"`
	Credentials      *map[string]interface{}           `json:"credentials,omitempty"`
	Dc               *DublinCore                       `json:"dc,omitempty"`
	Location         interface{}                       `json:"location"`
	LocationType     ProjectBackupLocationLocationType `json:"location_type"`
}

// ProjectBackupLocationLocationType defines model for ProjectBackupLocation.LocationType.
type ProjectBackupLocationLocationType string

// ProjectBackupLocationVerifyResponse defines model for ProjectBackupLocationVerifyResponse.
type ProjectBackupLocationVerifyResponse struct {
	Message         *string `json:"message,omitempty"`
	S3LocationValid *bool   `json:"s3_location_valid,omitempty"`
}

// ProjectEdit defines model for ProjectEdit.
type ProjectEdit struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
}

// ProjectRole defines model for ProjectRole.
type ProjectRole struct {
	Added     *bool              `json:"added,omitempty"`
	ProjectId *string            `json:"project_id,omitempty"`
	RoleFqn   ProjectRoleRoleFqn `json:"role_fqn"`
	User      *string            `json:"user,omitempty"`
	UserId    *string            `json:"user_id,omitempty"`
}

// ProjectRoleRoleFqn defines model for ProjectRole.RoleFqn.
type ProjectRoleRoleFqn string

// ProjectUser defines model for ProjectUser.
type ProjectUser struct {
	Email        openapi_types.Email   `json:"email"`
	Idp          *string               `json:"idp,omitempty"`
	Name         *string               `json:"name,omitempty"`
	Picture      *string               `json:"picture,omitempty"`
	ProjectRoles *[]PartialProjectRole `json:"project_roles,omitempty"`
	Uid          *string               `json:"uid,omitempty"`
	Username     *string               `json:"username,omitempty"`
}

// Promotion defines model for Promotion.
type Promotion struct {
	Description     *string    `json:"description,omitempty"`
	DiscountPercent *int       `json:"discount_percent,omitempty"`
	DurationMonths  *int       `json:"duration_months,omitempty"`
	Id              *string    `json:"id,omitempty"`
	PlanName        *string    `json:"plan_name,omitempty"`
	PlanTier        *string    `json:"plan_tier,omitempty"`
	ScaleUnit       *int       `json:"scale_unit,omitempty"`
	ValidTo         *time.Time `json:"valid_to,omitempty"`
}

// Quota defines model for Quota.
type Quota struct {
	Code         *string  `json:"code,omitempty"`
	CurrentValue *float32 `json:"current_value,omitempty"`
	Quota        *float32 `json:"quota,omitempty"`
}

// Region defines model for Region.
type Region struct {
	Dc               *DublinCore   `json:"dc,omitempty"`
	Deprecated       *bool         `json:"deprecated,omitempty"`
	Description      *string       `json:"description,omitempty"`
	IsEdgeRegion     *bool         `json:"is_edge_region,omitempty"`
	LastSeen         *time.Time    `json:"last_seen,omitempty"`
	Name             *string       `json:"name,omitempty"`
	OrganizationId   *string       `json:"organization_id,omitempty"`
	Status           *RegionStatus `json:"status,omitempty"`
	UpgradeAvailable *bool         `json:"upgrade_available,omitempty"`
}

// RegionStatus defines model for Region.Status.
type RegionStatus string

// RegionCreate defines model for RegionCreate.
type RegionCreate struct {
	AwsBucket      *string `json:"aws_bucket,omitempty"`
	AwsRegion      *string `json:"aws_region,omitempty"`
	Description    string  `json:"description"`
	OrganizationId string  `json:"organization_id"`
	// Deprecated:
	Provider *string `json:"provider,omitempty"`
}

// Role defines model for Role.
type Role struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// ScaleOption defines model for ScaleOption.
type ScaleOption struct {
	Description    *string      `json:"description,omitempty"`
	DiskSpaceBytes *interface{} `json:"disk_space_bytes,omitempty"`
	Dtus           *int         `json:"dtus,omitempty"`
	InsertsSecond  *int         `json:"inserts_second,omitempty"`
	Nodes          *int         `json:"nodes,omitempty"`
	PricePerMinute *int         `json:"price_per_minute,omitempty"`
	QueriesSecond  *int         `json:"queries_second,omitempty"`
	StorageBytes   *interface{} `json:"storage_bytes,omitempty"`
	Value          *int         `json:"value,omitempty"`
}

// Secret defines model for Secret.
type Secret struct {
	Data        *NestedSecret `json:"data,omitempty"`
	Dc          *DublinCore   `json:"dc,omitempty"`
	Description *string       `json:"description,omitempty"`
	Id          *string       `json:"id,omitempty"`
	Name        *string       `json:"name,omitempty"`
	Type        *string       `json:"type,omitempty"`
}

// SetupIntent defines model for SetupIntent.
type SetupIntent struct {
	ClientSecret *string `json:"client_secret,omitempty"`
}

// SetupPaymentIntent defines model for SetupPaymentIntent.
type SetupPaymentIntent struct {
	ClientSecret  *string `json:"client_secret,omitempty"`
	PaymentIntent *string `json:"payment_intent,omitempty"`
}

// Spec defines model for Spec.
type Spec struct {
	CpuCores            *float32 `json:"cpu_cores,omitempty"`
	RamBytes            *int     `json:"ram_bytes,omitempty"`
	StorageBytes        *int     `json:"storage_bytes,omitempty"`
	StorageMaximumBytes *int     `json:"storage_maximum_bytes,omitempty"`
	StorageMinimumBytes *int     `json:"storage_minimum_bytes,omitempty"`
}

// StorageConsumption defines model for StorageConsumption.
type StorageConsumption struct {
	Cost     *float32 `json:"cost,omitempty"`
	Credits  *float32 `json:"credits,omitempty"`
	Dtuhours *float32 `json:"dtuhours,omitempty"`
	Gibhours *int     `json:"gibhours,omitempty"`
	Minutes  *int     `json:"minutes,omitempty"`
	Total    *float32 `json:"total,omitempty"`
}

// Subscription defines model for Subscription.
type Subscription struct {
	Active               *bool                   `json:"active,omitempty"`
	BillingModel         *string                 `json:"billing_model,omitempty"`
	Dc                   *DublinCore             `json:"dc,omitempty"`
	Id                   *string                 `json:"id,omitempty"`
	Name                 *string                 `json:"name,omitempty"`
	Offer                *string                 `json:"offer,omitempty"`
	OfferId              *string                 `json:"offer_id,omitempty"`
	OrganizationId       *string                 `json:"organization_id,omitempty"`
	Plan                 *string                 `json:"plan,omitempty"`
	PlanId               *string                 `json:"plan_id,omitempty"`
	Promotion            *map[string]interface{} `json:"promotion,omitempty"`
	Provider             *string                 `json:"provider,omitempty"`
	Provisioned          *bool                   `json:"provisioned,omitempty"`
	Purchaser            *string                 `json:"purchaser,omitempty"`
	Reference            *string                 `json:"reference,omitempty"`
	State                *string                 `json:"state,omitempty"`
	SubscriptionId       *string                 `json:"subscription_id,omitempty"`
	SubscriptionProvider *string                 `json:"subscription_provider,omitempty"`
}

// SubscriptionAssignOrg defines model for SubscriptionAssignOrg.
type SubscriptionAssignOrg struct {
	OrganizationId string `json:"organization_id"`
}

// SubscriptionCreate defines model for SubscriptionCreate.
type SubscriptionCreate struct {
	OrganizationId string `json:"organization_id"`
	Type           string `json:"type"`
}

// SubscriptionEdit defines model for SubscriptionEdit.
type SubscriptionEdit struct {
	Plan   *string `json:"plan,omitempty"`
	PlanId *string `json:"plan_id,omitempty"`
}

// User defines model for User.
type User struct {
	Email             openapi_types.Email         `json:"email"`
	Idp               *string                     `json:"idp,omitempty"`
	Name              *string                     `json:"name,omitempty"`
	OrganizationRoles *[]PartialOrganizationRoles `json:"organization_roles,omitempty"`
	Picture           *string                     `json:"picture,omitempty"`
	ProjectRoles      *[]PartialProjectRole       `json:"project_roles,omitempty"`
	Uid               *string                     `json:"uid,omitempty"`
	Username          *string                     `json:"username,omitempty"`
}

// ValidateCard defines model for ValidateCard.
type ValidateCard struct {
	PaymentIntent string `json:"payment_intent"`
}

// Version defines model for Version.
type Version struct {
	Prerelease *bool   `json:"prerelease,omitempty"`
	Release    *string `json:"release,omitempty"`
}

// PathApiKey defines model for path_api_key.
type PathApiKey = string

// PathCardId defines model for path_card_id.
type PathCardId = string

// PathClusterId defines model for path_cluster_id.
type PathClusterId = string

// PathConfigurationKey defines model for path_configuration_key.
type PathConfigurationKey = string

// PathCreditId defines model for path_credit_id.
type PathCreditId = string

// PathExportJobId defines model for path_export_job_id.
type PathExportJobId = string

// PathFileId defines model for path_file_id.
type PathFileId = string

// PathImportJobId defines model for path_import_job_id.
type PathImportJobId = string

// PathInviteToken defines model for path_invite_token.
type PathInviteToken = string

// PathMetricId defines model for path_metric_id.
type PathMetricId string

// PathName defines model for path_name.
type PathName = string

// PathOrdinal defines model for path_ordinal.
type PathOrdinal = int

// PathOrganizationId defines model for path_organization_id.
type PathOrganizationId = string

// PathOrganizationSecretId defines model for path_organization_secret_id.
type PathOrganizationSecretId = string

// PathProductKind defines model for path_product_kind.
type PathProductKind = string

// PathProjectId defines model for path_project_id.
type PathProjectId = string

// PathRegionName defines model for path_region_name.
type PathRegionName = string

// PathSubscriptionId defines model for path_subscription_id.
type PathSubscriptionId = string

// PathTargetClusterId defines model for path_target_cluster_id.
type PathTargetClusterId = string

// PathUserId defines model for path_user_id.
type PathUserId = string

// PathUserIdOrEmail defines model for path_user_id_or_email.
type PathUserIdOrEmail = string

// QueryAuditlogAction defines model for query_auditlog_action.
type QueryAuditlogAction = string

// QueryAuditlogClusterId defines model for query_auditlog_cluster_id.
type QueryAuditlogClusterId = string

// QueryAzureContainerName defines model for query_azure_container_name.
type QueryAzureContainerName = string

// QueryAzurePrefix defines model for query_azure_prefix.
type QueryAzurePrefix = string

// QueryAzureSecretId defines model for query_azure_secret_id.
type QueryAzureSecretId = string

// QueryBucket defines model for query_bucket.
type QueryBucket = string

// QueryClustersProductName defines model for query_clusters_product_name.
type QueryClustersProductName = string

// QueryCreditStatus defines model for query_credit_status.
type QueryCreditStatus = string

// QueryEnd defines model for query_end.
type QueryEnd = string

// QueryEndTs defines model for query_end_ts.
type QueryEndTs = string

// QueryEndpoint defines model for query_endpoint.
type QueryEndpoint = string

// QueryExcludeClusterId defines model for query_exclude_cluster_id.
type QueryExcludeClusterId = string

// QueryFilesLimit defines model for query_files_limit.
type QueryFilesLimit = string

// QueryFilesOffset defines model for query_files_offset.
type QueryFilesOffset = int

// QueryFromTs defines model for query_from_ts.
type QueryFromTs = string

// QueryInviteStatus defines model for query_invite_status.
type QueryInviteStatus = string

// QueryLast defines model for query_last.
type QueryLast = string

// QueryLimit defines model for query_limit.
type QueryLimit = int

// QueryMinutesAgo defines model for query_minutes_ago.
type QueryMinutesAgo = int

// QueryOrganizationId defines model for query_organization_id.
type QueryOrganizationId = string

// QueryPrefix defines model for query_prefix.
type QueryPrefix = string

// QueryProductName defines model for query_product_name.
type QueryProductName = string

// QueryProductOffer defines model for query_product_offer.
type QueryProductOffer = string

// QueryProductPlan defines model for query_product_plan.
type QueryProductPlan = string

// QueryProductTier defines model for query_product_tier.
type QueryProductTier = string

// QueryProjectId defines model for query_project_id.
type QueryProjectId = string

// QueryRegion defines model for query_region.
type QueryRegion = string

// QuerySecretId defines model for query_secret_id.
type QuerySecretId = string

// QuerySpecificProductName defines model for query_specific_product_name.
type QuerySpecificProductName = string

// QuerySpecificProductOffer defines model for query_specific_product_offer.
type QuerySpecificProductOffer = string

// QuerySpecificProductPlan defines model for query_specific_product_plan.
type QuerySpecificProductPlan = string

// QuerySpecificProductTier defines model for query_specific_product_tier.
type QuerySpecificProductTier = string

// QuerySpecificProductUnit defines model for query_specific_product_unit.
type QuerySpecificProductUnit = int

// QueryStart defines model for query_start.
type QueryStart = string

// QueryStartTs defines model for query_start_ts.
type QueryStartTs = string

// QueryStatuses defines model for query_statuses.
type QueryStatuses = string

// QueryStorageBytes defines model for query_storage_bytes.
type QueryStorageBytes = string

// QuerySubscriptionId defines model for query_subscription_id.
type QuerySubscriptionId = string

// QueryToTs defines model for query_to_ts.
type QueryToTs = string

// N400 defines model for 400.
type N400 struct {
	// Errors Property names equal to the field names that occured an error.
	Errors *map[string]interface{} `json:"errors,omitempty"`

	// Message A human readable message explaining the error.
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// N401 defines model for 401.
type N401 struct {
	// Message A human readable message explaining the error.
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// N403 defines model for 403.
type N403 struct {
	// Message A human readable message explaining the error.
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// N404 defines model for 404.
type N404 struct {
	// Message A human readable message explaining the error.
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// N500 defines model for 500.
type N500 struct {
	// Message A human readable message explaining the error.
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// GetApiV2ClustersParams defines parameters for GetApiV2Clusters.
type GetApiV2ClustersParams struct {
	// SubscriptionId ID of the subscription
	SubscriptionId *QuerySubscriptionId `form:"subscription_id,omitempty" json:"subscription_id,omitempty"`

	// ProjectId ID of the project
	ProjectId *QueryProjectId `form:"project_id,omitempty" json:"project_id,omitempty"`

	// ProductName Name of the product
	ProductName *QueryClustersProductName `form:"product_name,omitempty" json:"product_name,omitempty"`
}

// GetApiV2ClustersClusterIdImportJobsImportJobIdProgressParams defines parameters for GetApiV2ClustersClusterIdImportJobsImportJobIdProgress.
type GetApiV2ClustersClusterIdImportJobsImportJobIdProgressParams struct {
	// Limit The number of files returned.Use keywork 'ALL' to have no limit applied.
	Limit *QueryFilesLimit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset The offset files to skip before beginning to return the files.
	Offset *QueryFilesOffset `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetApiV2ClustersClusterIdMetricsMetricIdParams defines parameters for GetApiV2ClustersClusterIdMetricsMetricId.
type GetApiV2ClustersClusterIdMetricsMetricIdParams struct {
	// Start Start Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]
	Start *QueryStartTs `form:"start,omitempty" json:"start,omitempty"`

	// End End Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]
	End *QueryEndTs `form:"end,omitempty" json:"end,omitempty"`

	// MinutesAgo The number of minutes of data to retrieve. Overrides 'start'.
	MinutesAgo *QueryMinutesAgo `form:"minutes_ago,omitempty" json:"minutes_ago,omitempty"`
}

// GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId defines parameters for GetApiV2ClustersClusterIdMetricsMetricId.
type GetApiV2ClustersClusterIdMetricsMetricIdParamsMetricId string

// GetApiV2ClustersClusterIdOperationsParams defines parameters for GetApiV2ClustersClusterIdOperations.
type GetApiV2ClustersClusterIdOperationsParams struct {
	// Statuses Statuses that the operations will be filtered by. It can be specified several times to filter by several statuses.
	Statuses *QueryStatuses `form:"statuses,omitempty" json:"statuses,omitempty"`

	// Start Date used to filter the operations returned. It must adhere to the following format: 2021-11-16T13:00:00Z
	Start *QueryStart `form:"start,omitempty" json:"start,omitempty"`

	// End Date used to filter the operations returned. It must adhere to the following format: 2021-11-16T13:00:00Z
	End *QueryEnd `form:"end,omitempty" json:"end,omitempty"`
}

// GetApiV2ClustersClusterIdSnapshotsParams defines parameters for GetApiV2ClustersClusterIdSnapshots.
type GetApiV2ClustersClusterIdSnapshotsParams struct {
	// Start Start Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]
	Start *QueryStartTs `form:"start,omitempty" json:"start,omitempty"`

	// End End Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]
	End *QueryEndTs `form:"end,omitempty" json:"end,omitempty"`
}

// GetApiV2ConfigurationsParams defines parameters for GetApiV2Configurations.
type GetApiV2ConfigurationsParams struct {
	// OrganizationId ID of the organization
	OrganizationId *QueryOrganizationId `form:"organization_id,omitempty" json:"organization_id,omitempty"`
}

// GetApiV2ConfigurationsKeyParams defines parameters for GetApiV2ConfigurationsKey.
type GetApiV2ConfigurationsKeyParams struct {
	// OrganizationId ID of the organization
	OrganizationId *QueryOrganizationId `form:"organization_id,omitempty" json:"organization_id,omitempty"`
}

// GetApiV2IntegrationsAwsS3BucketsParams defines parameters for GetApiV2IntegrationsAwsS3Buckets.
type GetApiV2IntegrationsAwsS3BucketsParams struct {
	// SecretId The organization secret_id that holds the AWS access key that will be used to try to retrieve the S3 buckets.
	SecretId QuerySecretId `form:"secret_id" json:"secret_id"`

	// Endpoint Optional. The S3 compatible endpoint URL that will be used to retrieve the S3 buckets.
	Endpoint *QueryEndpoint `form:"endpoint,omitempty" json:"endpoint,omitempty"`
}

// GetApiV2IntegrationsAwsS3ObjectsParams defines parameters for GetApiV2IntegrationsAwsS3Objects.
type GetApiV2IntegrationsAwsS3ObjectsParams struct {
	// SecretId The organization secret_id that holds the AWS access key that will be used to try to retrieve the S3 buckets.
	SecretId QuerySecretId `form:"secret_id" json:"secret_id"`

	// Endpoint Optional. The S3 compatible endpoint URL that will be used to retrieve the S3 buckets.
	Endpoint *QueryEndpoint `form:"endpoint,omitempty" json:"endpoint,omitempty"`
	Bucket   QueryBucket    `form:"bucket" json:"bucket"`
	Prefix   *QueryPrefix   `form:"prefix,omitempty" json:"prefix,omitempty"`
}

// GetApiV2IntegrationsAzureBlobStorageContainersParams defines parameters for GetApiV2IntegrationsAzureBlobStorageContainers.
type GetApiV2IntegrationsAzureBlobStorageContainersParams struct {
	// SecretId The organization secret_id that holds the Azure access key that will be used to try to retrieve the Azure Blob Storage containers and blobs.
	SecretId QueryAzureSecretId `form:"secret_id" json:"secret_id"`
}

// GetApiV2IntegrationsAzureBlobsParams defines parameters for GetApiV2IntegrationsAzureBlobs.
type GetApiV2IntegrationsAzureBlobsParams struct {
	// SecretId The organization secret_id that holds the Azure access key that will be used to try to retrieve the Azure Blob Storage containers and blobs.
	SecretId      QueryAzureSecretId      `form:"secret_id" json:"secret_id"`
	ContainerName QueryAzureContainerName `form:"container_name" json:"container_name"`
	Prefix        *QueryAzurePrefix       `form:"prefix,omitempty" json:"prefix,omitempty"`
}

// GetApiV2OrganizationsOrganizationIdAuditlogsParams defines parameters for GetApiV2OrganizationsOrganizationIdAuditlogs.
type GetApiV2OrganizationsOrganizationIdAuditlogsParams struct {
	// From From Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]
	From *QueryFromTs `form:"from,omitempty" json:"from,omitempty"`

	// To To Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]
	To *QueryToTs `form:"to,omitempty" json:"to,omitempty"`

	// Action The logs can be filtered by their action using this query parameter.
	Action *QueryAuditlogAction `form:"action,omitempty" json:"action,omitempty"`

	// ClusterId The logs can be filtered by the cluster involved.
	ClusterId *QueryAuditlogClusterId `form:"cluster_id,omitempty" json:"cluster_id,omitempty"`

	// Last For pagination this query parameter can be provided. The value should be the id of the oldest element in the previous result.
	Last *QueryLast `form:"last,omitempty" json:"last,omitempty"`
}

// GetApiV2OrganizationsOrganizationIdClustersParams defines parameters for GetApiV2OrganizationsOrganizationIdClusters.
type GetApiV2OrganizationsOrganizationIdClustersParams struct {
	// SubscriptionId ID of the subscription
	SubscriptionId *QuerySubscriptionId `form:"subscription_id,omitempty" json:"subscription_id,omitempty"`

	// ProjectId ID of the project
	ProjectId *QueryProjectId `form:"project_id,omitempty" json:"project_id,omitempty"`

	// ProductName Name of the product
	ProductName *QueryClustersProductName `form:"product_name,omitempty" json:"product_name,omitempty"`
}

// GetApiV2OrganizationsOrganizationIdCreditsParams defines parameters for GetApiV2OrganizationsOrganizationIdCredits.
type GetApiV2OrganizationsOrganizationIdCreditsParams struct {
	// Status Status the credits will be filtered by.
	Status *QueryCreditStatus `form:"status,omitempty" json:"status,omitempty"`
}

// GetApiV2OrganizationsOrganizationIdInvitationsParams defines parameters for GetApiV2OrganizationsOrganizationIdInvitations.
type GetApiV2OrganizationsOrganizationIdInvitationsParams struct {
	// Status Either PENDING or ACCEPTED
	Status *QueryInviteStatus `form:"status,omitempty" json:"status,omitempty"`
}

// GetApiV2OrganizationsOrganizationIdRemainingBudgetParams defines parameters for GetApiV2OrganizationsOrganizationIdRemainingBudget.
type GetApiV2OrganizationsOrganizationIdRemainingBudgetParams struct {
	// ExcludeClusterId ID of the cluster to exclude
	ExcludeClusterId *QueryExcludeClusterId `form:"exclude_cluster_id,omitempty" json:"exclude_cluster_id,omitempty"`
}

// GetApiV2ProductsParams defines parameters for GetApiV2Products.
type GetApiV2ProductsParams struct {
	// Tier The products can be filtered by their tier using this query parameter.
	Tier *QueryProductTier `form:"tier,omitempty" json:"tier,omitempty"`

	// Name The products can be filtered by their name using this query parameter.
	Name *QueryProductName `form:"name,omitempty" json:"name,omitempty"`

	// Plan The products can be filtered by their plan using this query parameter.
	Plan *QueryProductPlan `form:"plan,omitempty" json:"plan,omitempty"`

	// Offer The products can be filtered by their offer using this query parameter.
	Offer *QueryProductOffer `form:"offer,omitempty" json:"offer,omitempty"`
}

// GetApiV2ProductsClustersPriceParams defines parameters for GetApiV2ProductsClustersPrice.
type GetApiV2ProductsClustersPriceParams struct {
	// ProductPlan Specific product plan of the product to query.
	ProductPlan *QuerySpecificProductPlan `form:"product_plan,omitempty" json:"product_plan,omitempty"`

	// ProductOffer Specific product offer of the product to query.
	ProductOffer *QuerySpecificProductOffer `form:"product_offer,omitempty" json:"product_offer,omitempty"`

	// ProductName Specific product name of the product to query.
	ProductName QuerySpecificProductName `form:"product_name" json:"product_name"`

	// ProductTier Specific product tier of the product to query.
	ProductTier QuerySpecificProductTier `form:"product_tier" json:"product_tier"`

	// ProductUnit Specific product unit of the product to query.
	ProductUnit QuerySpecificProductUnit `form:"product_unit" json:"product_unit"`

	// Region Specific region of the product to query.
	Region QueryRegion `form:"region" json:"region"`

	// StorageBytes Storage size in Bytes.
	StorageBytes *QueryStorageBytes `form:"storage_bytes,omitempty" json:"storage_bytes,omitempty"`

	// OrganizationId ID of the organization
	OrganizationId *QueryOrganizationId `form:"organization_id,omitempty" json:"organization_id,omitempty"`
}

// GetApiV2ProductsKindParams defines parameters for GetApiV2ProductsKind.
type GetApiV2ProductsKindParams struct {
	// Tier The products can be filtered by their tier using this query parameter.
	Tier *QueryProductTier `form:"tier,omitempty" json:"tier,omitempty"`

	// Name The products can be filtered by their name using this query parameter.
	Name *QueryProductName `form:"name,omitempty" json:"name,omitempty"`

	// Plan The products can be filtered by their plan using this query parameter.
	Plan *QueryProductPlan `form:"plan,omitempty" json:"plan,omitempty"`

	// Offer The products can be filtered by their offer using this query parameter.
	Offer *QueryProductOffer `form:"offer,omitempty" json:"offer,omitempty"`
}

// GetApiV2ProjectsProjectIdClustersParams defines parameters for GetApiV2ProjectsProjectIdClusters.
type GetApiV2ProjectsProjectIdClustersParams struct {
	// SubscriptionId ID of the subscription
	SubscriptionId *QuerySubscriptionId `form:"subscription_id,omitempty" json:"subscription_id,omitempty"`

	// ProductName Name of the product
	ProductName *QueryClustersProductName `form:"product_name,omitempty" json:"product_name,omitempty"`
}

// GetApiV2RegionsParams defines parameters for GetApiV2Regions.
type GetApiV2RegionsParams struct {
	// OrganizationId ID of the organization
	OrganizationId *QueryOrganizationId `form:"organization_id,omitempty" json:"organization_id,omitempty"`
}

// GetApiV2StripePromotionsParams defines parameters for GetApiV2StripePromotions.
type GetApiV2StripePromotionsParams struct {
	// OrganizationId ID of the organization
	OrganizationId *QueryOrganizationId `form:"organization_id,omitempty" json:"organization_id,omitempty"`
}

// GetApiV2StripeSubscriptionsSubscriptionIdInvoicesParams defines parameters for GetApiV2StripeSubscriptionsSubscriptionIdInvoices.
type GetApiV2StripeSubscriptionsSubscriptionIdInvoicesParams struct {
	// Limit Number of items to retrieve
	Limit *QueryLimit `form:"limit,omitempty" json:"limit,omitempty"`
}

// GetApiV2SubscriptionsParams defines parameters for GetApiV2Subscriptions.
type GetApiV2SubscriptionsParams struct {
	// OrganizationId ID of the organization
	OrganizationId *QueryOrganizationId `form:"organization_id,omitempty" json:"organization_id,omitempty"`
}

// PatchApiV2AwsSubscriptionsSubscriptionIdJSONRequestBody defines body for PatchApiV2AwsSubscriptionsSubscriptionId for application/json ContentType.
type PatchApiV2AwsSubscriptionsSubscriptionIdJSONRequestBody = SubscriptionEdit

// PatchApiV2ClustersClusterIdJSONRequestBody defines body for PatchApiV2ClustersClusterId for application/json ContentType.
type PatchApiV2ClustersClusterIdJSONRequestBody = ClusterEdit

// PutApiV2ClustersClusterIdBackupScheduleJSONRequestBody defines body for PutApiV2ClustersClusterIdBackupSchedule for application/json ContentType.
type PutApiV2ClustersClusterIdBackupScheduleJSONRequestBody = ClusterBackupSchedule

// PutApiV2ClustersClusterIdDeletionProtectionJSONRequestBody defines body for PutApiV2ClustersClusterIdDeletionProtection for application/json ContentType.
type PutApiV2ClustersClusterIdDeletionProtectionJSONRequestBody = ClusterDeletionProtection

// PostApiV2ClustersClusterIdExportJobsJSONRequestBody defines body for PostApiV2ClustersClusterIdExportJobs for application/json ContentType.
type PostApiV2ClustersClusterIdExportJobsJSONRequestBody = ClusterExportJob

// PostApiV2ClustersClusterIdImportJobsJSONRequestBody defines body for PostApiV2ClustersClusterIdImportJobs for application/json ContentType.
type PostApiV2ClustersClusterIdImportJobsJSONRequestBody = ClusterImportJob

// PutApiV2ClustersClusterIdIpRestrictionsJSONRequestBody defines body for PutApiV2ClustersClusterIdIpRestrictions for application/json ContentType.
type PutApiV2ClustersClusterIdIpRestrictionsJSONRequestBody = ClusterIpWhitelistEdit

// PutApiV2ClustersClusterIdProductJSONRequestBody defines body for PutApiV2ClustersClusterIdProduct for application/json ContentType.
type PutApiV2ClustersClusterIdProductJSONRequestBody = ClusterProduct

// PutApiV2ClustersClusterIdScaleJSONRequestBody defines body for PutApiV2ClustersClusterIdScale for application/json ContentType.
type PutApiV2ClustersClusterIdScaleJSONRequestBody = ClusterScale

// PostApiV2ClustersClusterIdSnapshotsRestoreJSONRequestBody defines body for PostApiV2ClustersClusterIdSnapshotsRestore for application/json ContentType.
type PostApiV2ClustersClusterIdSnapshotsRestoreJSONRequestBody = ClusterSnapshotRestore

// PutApiV2ClustersClusterIdStorageJSONRequestBody defines body for PutApiV2ClustersClusterIdStorage for application/json ContentType.
type PutApiV2ClustersClusterIdStorageJSONRequestBody = ClusterStorageExpand

// PutApiV2ClustersClusterIdSuspendJSONRequestBody defines body for PutApiV2ClustersClusterIdSuspend for application/json ContentType.
type PutApiV2ClustersClusterIdSuspendJSONRequestBody = ClusterSuspend

// PutApiV2ClustersClusterIdUpgradeJSONRequestBody defines body for PutApiV2ClustersClusterIdUpgrade for application/json ContentType.
type PutApiV2ClustersClusterIdUpgradeJSONRequestBody = ClusterUpgrade

// PutApiV2ConfigurationsKeyJSONRequestBody defines body for PutApiV2ConfigurationsKey for application/json ContentType.
type PutApiV2ConfigurationsKeyJSONRequestBody = ConfigurationItem

// PostApiV2MetaJwtRefreshJSONRequestBody defines body for PostApiV2MetaJwtRefresh for application/json ContentType.
type PostApiV2MetaJwtRefreshJSONRequestBody = JWTRefreshToken

// PostApiV2OrganizationsJSONRequestBody defines body for PostApiV2Organizations for application/json ContentType.
type PostApiV2OrganizationsJSONRequestBody = Organization

// PutApiV2OrganizationsOrganizationIdJSONRequestBody defines body for PutApiV2OrganizationsOrganizationId for application/json ContentType.
type PutApiV2OrganizationsOrganizationIdJSONRequestBody = OrganizationEdit

// PostApiV2OrganizationsOrganizationIdClustersJSONRequestBody defines body for PostApiV2OrganizationsOrganizationIdClusters for application/json ContentType.
type PostApiV2OrganizationsOrganizationIdClustersJSONRequestBody = ClusterProvision

// PostApiV2OrganizationsOrganizationIdCreditsJSONRequestBody defines body for PostApiV2OrganizationsOrganizationIdCredits for application/json ContentType.
type PostApiV2OrganizationsOrganizationIdCreditsJSONRequestBody = Credit

// PatchApiV2OrganizationsOrganizationIdCreditsCreditIdJSONRequestBody defines body for PatchApiV2OrganizationsOrganizationIdCreditsCreditId for application/json ContentType.
type PatchApiV2OrganizationsOrganizationIdCreditsCreditIdJSONRequestBody = Credit

// PutApiV2OrganizationsOrganizationIdCustomerJSONRequestBody defines body for PutApiV2OrganizationsOrganizationIdCustomer for application/json ContentType.
type PutApiV2OrganizationsOrganizationIdCustomerJSONRequestBody = Customer

// PostApiV2OrganizationsOrganizationIdFilesJSONRequestBody defines body for PostApiV2OrganizationsOrganizationIdFiles for application/json ContentType.
type PostApiV2OrganizationsOrganizationIdFilesJSONRequestBody = File

// PostApiV2OrganizationsOrganizationIdSecretsJSONRequestBody defines body for PostApiV2OrganizationsOrganizationIdSecrets for application/json ContentType.
type PostApiV2OrganizationsOrganizationIdSecretsJSONRequestBody = Secret

// PostApiV2OrganizationsOrganizationIdUsersJSONRequestBody defines body for PostApiV2OrganizationsOrganizationIdUsers for application/json ContentType.
type PostApiV2OrganizationsOrganizationIdUsersJSONRequestBody = OrganizationRole

// PostApiV2ProjectsJSONRequestBody defines body for PostApiV2Projects for application/json ContentType.
type PostApiV2ProjectsJSONRequestBody = Project

// PatchApiV2ProjectsProjectIdJSONRequestBody defines body for PatchApiV2ProjectsProjectId for application/json ContentType.
type PatchApiV2ProjectsProjectIdJSONRequestBody = ProjectEdit

// PostApiV2ProjectsProjectIdUsersJSONRequestBody defines body for PostApiV2ProjectsProjectIdUsers for application/json ContentType.
type PostApiV2ProjectsProjectIdUsersJSONRequestBody = ProjectRole

// PostApiV2RegionsJSONRequestBody defines body for PostApiV2Regions for application/json ContentType.
type PostApiV2RegionsJSONRequestBody = RegionCreate

// PostApiV2RegionsRegionNameVerifyBackupLocationJSONRequestBody defines body for PostApiV2RegionsRegionNameVerifyBackupLocation for application/json ContentType.
type PostApiV2RegionsRegionNameVerifyBackupLocationJSONRequestBody = ProjectBackupLocation

// PatchApiV2StripeOrganizationsOrganizationIdBillingInformationJSONRequestBody defines body for PatchApiV2StripeOrganizationsOrganizationIdBillingInformation for application/json ContentType.
type PatchApiV2StripeOrganizationsOrganizationIdBillingInformationJSONRequestBody = BillingInformation

// PatchApiV2StripeOrganizationsOrganizationIdCardsCardIdJSONRequestBody defines body for PatchApiV2StripeOrganizationsOrganizationIdCardsCardId for application/json ContentType.
type PatchApiV2StripeOrganizationsOrganizationIdCardsCardIdJSONRequestBody = CardEdit

// PostApiV2SubscriptionsJSONRequestBody defines body for PostApiV2Subscriptions for application/json ContentType.
type PostApiV2SubscriptionsJSONRequestBody = SubscriptionCreate

// PatchApiV2SubscriptionsSubscriptionIdAssignOrgJSONRequestBody defines body for PatchApiV2SubscriptionsSubscriptionIdAssignOrg for application/json ContentType.
type PatchApiV2SubscriptionsSubscriptionIdAssignOrgJSONRequestBody = SubscriptionAssignOrg

// PatchApiV2UsersMeJSONRequestBody defines body for PatchApiV2UsersMe for application/json ContentType.
type PatchApiV2UsersMeJSONRequestBody = CurrentUser

// PostApiV2UsersMeAcceptInviteJSONRequestBody defines body for PostApiV2UsersMeAcceptInvite for application/json ContentType.
type PostApiV2UsersMeAcceptInviteJSONRequestBody = ConfirmationToken

// PatchApiV2UsersMeApiKeysApiKeyJSONRequestBody defines body for PatchApiV2UsersMeApiKeysApiKey for application/json ContentType.
type PatchApiV2UsersMeApiKeysApiKeyJSONRequestBody = EditApiKeySchema

// PutApiV2UsersMeConfirmEmailJSONRequestBody defines body for PutApiV2UsersMeConfirmEmail for application/json ContentType.
type PutApiV2UsersMeConfirmEmailJSONRequestBody = ConfirmationToken

// Getter for additional properties for NestedSecret. Returns the specified
// element and whether it was found
func (a NestedSecret) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NestedSecret
func (a *NestedSecret) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NestedSecret to handle AdditionalProperties
func (a *NestedSecret) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["aws_secret"]; found {
		err = json.Unmarshal(raw, &a.AwsSecret)
		if err != nil {
			return fmt.Errorf("error reading 'aws_secret': %w", err)
		}
		delete(object, "aws_secret")
	}

	if raw, found := object["azure_secret"]; found {
		err = json.Unmarshal(raw, &a.AzureSecret)
		if err != nil {
			return fmt.Errorf("error reading 'azure_secret': %w", err)
		}
		delete(object, "azure_secret")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NestedSecret to handle AdditionalProperties
func (a NestedSecret) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.AwsSecret != nil {
		object["aws_secret"], err = json.Marshal(a.AwsSecret)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'aws_secret': %w", err)
		}
	}

	if a.AzureSecret != nil {
		object["azure_secret"], err = json.Marshal(a.AzureSecret)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'azure_secret': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
