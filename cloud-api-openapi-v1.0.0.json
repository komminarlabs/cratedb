{
    "components": {
        "parameters": {
            "path_api_key": {
                "description": "The key that uniquely identifies an API key for a user",
                "in": "path",
                "name": "api_key",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_card_id": {
                "description": "ID of the card",
                "in": "path",
                "name": "card_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_cluster_id": {
                "description": "ID of the cluster",
                "in": "path",
                "name": "cluster_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_configuration_key": {
                "description": "The key of a configuration",
                "in": "path",
                "name": "key",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_credit_id": {
                "description": "ID of the credit",
                "in": "path",
                "name": "credit_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_export_job_id": {
                "description": "ID of the export job",
                "in": "path",
                "name": "export_job_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_file_id": {
                "description": "ID of the file",
                "in": "path",
                "name": "file_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_import_job_id": {
                "description": "ID of the import job",
                "in": "path",
                "name": "import_job_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_invite_token": {
                "description": "The identifier of a user invite, also known as token",
                "in": "path",
                "name": "invite_token",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_metric_id": {
                "description": "ID of the metric",
                "in": "path",
                "name": "metric_id",
                "required": true,
                "schema": {
                    "enum": [
                        "crate_query_count",
                        "crate_query_duration",
                        "crate_availability",
                        "crate_cpu_seconds",
                        "crate_memory_usage",
                        "crate_disk_usage2",
                        "crate_cluster_last_user_activity",
                        "crate_unreplicated_tables"
                    ],
                    "type": "string"
                }
            },
            "path_name": {
                "description": "Name of the cluster",
                "in": "path",
                "name": "name",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_ordinal": {
                "description": "Ordinal index of the cluster",
                "in": "path",
                "name": "ordinal",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "path_organization_id": {
                "description": "ID of the organization",
                "in": "path",
                "name": "organization_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_organization_secret_id": {
                "description": "The identifier of a Secret",
                "in": "path",
                "name": "secret_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_product_kind": {
                "description": "Kind of the product",
                "in": "path",
                "name": "kind",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_project_id": {
                "description": "ID of the project",
                "in": "path",
                "name": "project_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_region_name": {
                "description": "Name of the region",
                "in": "path",
                "name": "region_name",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_subscription_id": {
                "description": "ID of the subscription",
                "in": "path",
                "name": "subscription_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_target_cluster_id": {
                "description": "ID of the target cluster",
                "in": "path",
                "name": "cluster_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_user_id": {
                "description": "ID of the user",
                "in": "path",
                "name": "user_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "path_user_id_or_email": {
                "description": "ID or email address of the user",
                "in": "path",
                "name": "user_id_or_email",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_auditlog_action": {
                "description": "The logs can be filtered by their action using this query parameter.",
                "in": "query",
                "name": "action",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_auditlog_cluster_id": {
                "description": "The logs can be filtered by the cluster involved.",
                "in": "query",
                "name": "cluster_id",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_azure_container_name": {
                "description": "",
                "in": "query",
                "name": "container_name",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_azure_prefix": {
                "description": "",
                "in": "query",
                "name": "prefix",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_azure_secret_id": {
                "description": "The organization secret_id that holds the Azure access key that will be used to try to retrieve the Azure Blob Storage containers and blobs.",
                "in": "query",
                "name": "secret_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_bucket": {
                "description": "",
                "in": "query",
                "name": "bucket",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_clusters_product_name": {
                "description": "Name of the product",
                "in": "query",
                "name": "product_name",
                "schema": {
                    "type": "string"
                }
            },
            "query_credit_status": {
                "description": "Status the credits will be filtered by.",
                "in": "query",
                "name": "status",
                "schema": {
                    "type": "string"
                }
            },
            "query_end": {
                "description": "Date used to filter the operations returned. It must adhere to the following format: 2021-11-16T13:00:00Z",
                "in": "query",
                "name": "end",
                "schema": {
                    "type": "string"
                }
            },
            "query_end_ts": {
                "description": "End Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]",
                "in": "query",
                "name": "end",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_endpoint": {
                "description": "Optional. The S3 compatible endpoint URL that will be used to retrieve the S3 buckets.",
                "in": "query",
                "name": "endpoint",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_exclude_cluster_id": {
                "description": "ID of the cluster to exclude",
                "in": "query",
                "name": "exclude_cluster_id",
                "schema": {
                    "type": "string"
                }
            },
            "query_files_limit": {
                "description": "The number of files returned.Use keywork 'ALL' to have no limit applied.",
                "in": "query",
                "name": "limit",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_files_offset": {
                "description": "The offset files to skip before beginning to return the files.",
                "in": "query",
                "name": "offset",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "query_from_ts": {
                "description": "From Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]",
                "in": "query",
                "name": "from",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_invite_status": {
                "description": "Either PENDING or ACCEPTED",
                "in": "query",
                "name": "status",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_last": {
                "description": "For pagination this query parameter can be provided. The value should be the id of the oldest element in the previous result.",
                "in": "query",
                "name": "last",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_limit": {
                "description": "Number of items to retrieve",
                "in": "query",
                "name": "limit",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "query_minutes_ago": {
                "description": "The number of minutes of data to retrieve. Overrides 'start'.",
                "in": "query",
                "name": "minutes_ago",
                "schema": {
                    "type": "integer"
                }
            },
            "query_organization_id": {
                "description": "ID of the organization",
                "in": "query",
                "name": "organization_id",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_prefix": {
                "description": "",
                "in": "query",
                "name": "prefix",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_product_name": {
                "description": "The products can be filtered by their name using this query parameter.",
                "in": "query",
                "name": "name",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_product_offer": {
                "description": "The products can be filtered by their offer using this query parameter.",
                "in": "query",
                "name": "offer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_product_plan": {
                "description": "The products can be filtered by their plan using this query parameter.",
                "in": "query",
                "name": "plan",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_product_tier": {
                "description": "The products can be filtered by their tier using this query parameter.",
                "in": "query",
                "name": "tier",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_project_id": {
                "description": "ID of the project",
                "in": "query",
                "name": "project_id",
                "schema": {
                    "type": "string"
                }
            },
            "query_region": {
                "description": "Specific region of the product to query.",
                "in": "query",
                "name": "region",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_secret_id": {
                "description": "The organization secret_id that holds the AWS access key that will be used to try to retrieve the S3 buckets.",
                "in": "query",
                "name": "secret_id",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_specific_product_name": {
                "description": "Specific product name of the product to query.",
                "in": "query",
                "name": "product_name",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_specific_product_offer": {
                "description": "Specific product offer of the product to query.",
                "in": "query",
                "name": "product_offer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_specific_product_plan": {
                "description": "Specific product plan of the product to query.",
                "in": "query",
                "name": "product_plan",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_specific_product_tier": {
                "description": "Specific product tier of the product to query.",
                "in": "query",
                "name": "product_tier",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "query_specific_product_unit": {
                "description": "Specific product unit of the product to query.",
                "in": "query",
                "name": "product_unit",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "query_start": {
                "description": "Date used to filter the operations returned. It must adhere to the following format: 2021-11-16T13:00:00Z",
                "in": "query",
                "name": "start",
                "schema": {
                    "type": "string"
                }
            },
            "query_start_ts": {
                "description": "Start Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]",
                "in": "query",
                "name": "start",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_statuses": {
                "description": "Statuses that the operations will be filtered by. It can be specified several times to filter by several statuses.",
                "in": "query",
                "name": "statuses",
                "schema": {
                    "type": "string"
                }
            },
            "query_storage_bytes": {
                "description": "Storage size in Bytes.",
                "in": "query",
                "name": "storage_bytes",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "query_subscription_id": {
                "description": "ID of the subscription",
                "in": "query",
                "name": "subscription_id",
                "schema": {
                    "type": "string"
                }
            },
            "query_to_ts": {
                "description": "To Timestamp Filter. Format ISO 8601. YYYY-MM-DD[Thh:mm:ssZ]",
                "in": "query",
                "name": "to",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "responses": {
            "204": {
                "description": "No content"
            },
            "400": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "errors": {
                                    "additionalProperties": true,
                                    "description": "Property names equal to the field names that occured an error.",
                                    "type": "object"
                                },
                                "message": {
                                    "description": "A human readable message explaining the error.",
                                    "example": "Bad request",
                                    "type": "string"
                                },
                                "success": {
                                    "default": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Bad request"
            },
            "401": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "A human readable message explaining the error.",
                                    "example": "Authentication required.",
                                    "type": "string"
                                },
                                "success": {
                                    "default": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Unauthorized"
            },
            "403": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "A human readable message explaining the error.",
                                    "example": "Permission denied for user.",
                                    "type": "string"
                                },
                                "success": {
                                    "default": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Forbidden"
            },
            "404": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "A human readable message explaining the error.",
                                    "example": "Resource not found.",
                                    "type": "string"
                                },
                                "success": {
                                    "default": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Not Found"
            },
            "500": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "description": "A human readable message explaining the error.",
                                    "example": "An error occured.",
                                    "type": "string"
                                },
                                "success": {
                                    "default": false,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "Internal Server Error"
            }
        },
        "schemas": {
            "Address": {
                "properties": {
                    "city": {
                        "default": "",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "country": {
                        "default": "",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "line1": {
                        "default": "",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "line2": {
                        "default": "",
                        "maxLength": 512,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "postal_code": {
                        "default": "",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ApiKey": {
                "properties": {
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "key": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "last_used": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "secret": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "user_id": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditEvent": {
                "properties": {
                    "action": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "actor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AuditUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "context": {
                        "readOnly": true,
                        "type": "object"
                    },
                    "created": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditUser": {
                "properties": {
                    "email": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "picture": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AwsSecret": {
                "properties": {
                    "access_key": {
                        "type": "string"
                    },
                    "secret_key": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AzureSecret": {
                "properties": {
                    "connection_string": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BillingInformation": {
                "properties": {
                    "address": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "default": {
                            "city": "",
                            "country": "",
                            "line1": "",
                            "line2": "",
                            "postal_code": ""
                        }
                    },
                    "email": {
                        "default": "",
                        "format": "email",
                        "type": "string"
                    },
                    "name": {
                        "default": "",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tax_id": {
                        "default": null,
                        "maxLength": 512,
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                    },
                    "tax_id_type": {
                        "default": null,
                        "maxLength": 512,
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BlobsList": {
                "properties": {
                    "blobs": {
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "container_name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string",
                        "writeOnly": true
                    },
                    "error": {
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "prefix": {
                        "maxLength": 512,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "secret_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "blobs",
                    "container_name",
                    "error",
                    "secret_id"
                ],
                "type": "object"
            },
            "Bucket": {
                "properties": {
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "BucketsList": {
                "properties": {
                    "buckets": {
                        "items": {
                            "$ref": "#/components/schemas/Bucket"
                        },
                        "type": "array"
                    },
                    "error": {
                        "nullable": true,
                        "type": "string"
                    }
                },
                "required": [
                    "buckets",
                    "error"
                ],
                "type": "object"
            },
            "CardEdit": {
                "additionalProperties": false,
                "properties": {
                    "default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "default"
                ],
                "type": "object"
            },
            "Cluster": {
                "properties": {
                    "allow_custom_storage": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "allow_suspend": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "backup_schedule": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^((((\\d+,)+\\d+|(\\d+(\\/|-|#)\\d+)|\\d+L?|\\*(\\/\\d+)?|L(-\\d+)?|\\?|[A-Z]{3}(-[A-Z]{3})?) ?){5,7})$|(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|µs|ms|s|m|h))+)$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "channel": {
                        "default": "stable",
                        "type": "string"
                    },
                    "crate_version": {
                        "type": "string"
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "deletion_protected": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "external_ip": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fqdn": {
                        "description": "Fully Qualified Domain Name. Note the trailing dot.",
                        "example": "red-r2-d2.aks1.eastus.azure.cratedb-dev.net.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "gc_available": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "hardware_specs": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HardwareSpecs"
                            }
                        ],
                        "default": null,
                        "nullable": true
                    },
                    "health": {
                        "example": {
                            "last_seen": "2024-09-27T16:59:02.507048",
                            "running_operation": "ALLOWED_CIDR_UPDATE",
                            "status": "GREEN"
                        },
                        "properties": {
                            "last_seen": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "running_operation": {
                                "description": "The type of the currently running operation. Returns an empty string if there is no operation in progress.",
                                "enum": [
                                    "UPGRADE",
                                    "SCALE",
                                    "CREATE",
                                    "ALLOWED_CIDR_UPDATE",
                                    "PASSWORD_UPDATE",
                                    "EXPAND_STORAGE",
                                    "SUSPEND",
                                    "CHANGE_COMPUTE",
                                    "BACKUP_SCHEDULE_UPDATE",
                                    "RESTORE_SNAPSHOT"
                                ],
                                "type": "string"
                            },
                            "status": {
                                "enum": [
                                    "GREEN",
                                    "YELLOW",
                                    "RED",
                                    "UNKNOWN",
                                    "UNREACHABLE",
                                    "SUSPENDED"
                                ],
                                "type": "string"
                            }
                        },
                        "readOnly": true,
                        "type": "object"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "ip_whitelist": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterIpWhitelist"
                        },
                        "type": "array"
                    },
                    "last_async_operation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PartialClusterAsyncOperation"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "x-maximum": "63",
                        "x-minimum": "3"
                    },
                    "num_nodes": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "origin": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "password": {
                        "minLength": 24,
                        "type": "string",
                        "writeOnly": true
                    },
                    "product_name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\-\\. ]*$",
                        "type": "string"
                    },
                    "product_tier": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "product_unit": {
                        "default": 0,
                        "type": "integer"
                    },
                    "project_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "subscription_id": {
                        "maxLength": 512,
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                    },
                    "suspended": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "url": {
                        "example": "https://red-r2-d2.aks1.eastus.azure.cratedb-dev.net:4200",
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "crate_version",
                    "name",
                    "password",
                    "product_name",
                    "product_tier",
                    "project_id",
                    "username"
                ],
                "type": "object"
            },
            "ClusterAsyncOperation": {
                "properties": {
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "entity": {
                        "type": "string"
                    },
                    "entity_id": {
                        "type": "string"
                    },
                    "feedback_data": {
                        "type": "object"
                    },
                    "id": {
                        "type": "string"
                    },
                    "non_sensitive_data": {
                        "description": "Depending on the type of the operation, it contains the following data:\n- SCALE: current_product_unit, current_num_nodes, target_product_unit and target_num_nodes\n- UPGRADE: current_version and target_version- ALLOWED_CIDR_UPDATE: current_ip_whitelist and target_ip_whitelist",
                        "type": "object"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ClusterAsyncOperationsList": {
                "properties": {
                    "operations": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterAsyncOperation"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "required": [
                    "operations"
                ],
                "type": "object"
            },
            "ClusterBackupSchedule": {
                "properties": {
                    "backup_hours": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "backup_hours"
                ],
                "type": "object"
            },
            "ClusterDataJobAzureBlob": {
                "properties": {
                    "blob_name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "container_name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "secret_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "blob_name",
                    "container_name",
                    "secret_id"
                ],
                "type": "object"
            },
            "ClusterDataJobFile": {
                "properties": {
                    "download_url": {
                        "format": "url",
                        "readOnly": true,
                        "type": "string"
                    },
                    "file_size": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "upload_url": {
                        "format": "url",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "ClusterDataJobS3": {
                "properties": {
                    "bucket": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "endpoint": {
                        "format": "url",
                        "type": "string"
                    },
                    "file_path": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "secret_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "bucket",
                    "file_path",
                    "secret_id"
                ],
                "type": "object"
            },
            "ClusterDeletionProtection": {
                "properties": {
                    "deletion_protected": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "deletion_protected"
                ],
                "type": "object"
            },
            "ClusterEdit": {
                "properties": {
                    "password": {
                        "maxLength": 128,
                        "minLength": 24,
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "password"
                ],
                "type": "object"
            },
            "ClusterExportJob": {
                "properties": {
                    "cluster_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "compression": {
                        "maxLength": 512,
                        "minLength": 0,
                        "nullable": true,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "destination": {
                        "$ref": "#/components/schemas/ClusterExportJobDestination"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "progress": {
                        "example": {
                            "bytes": 0,
                            "details": {},
                            "failed_records": 0,
                            "message": "",
                            "percent": 0,
                            "records": 0,
                            "total_records": 0
                        },
                        "readOnly": true,
                        "type": "object"
                    },
                    "source": {
                        "$ref": "#/components/schemas/ClusterExportJobSource"
                    },
                    "status": {
                        "enum": [
                            "REGISTERED",
                            "SENT",
                            "IN_PROGRESS",
                            "SUCCEEDED",
                            "FAILED"
                        ],
                        "example": "REGISTERED",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "destination",
                    "source"
                ],
                "type": "object"
            },
            "ClusterExportJobDestination": {
                "properties": {
                    "file": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClusterDataJobFile"
                            }
                        ],
                        "example": {
                            "download_url": "string",
                            "file_size": 0,
                            "id": "string",
                            "name": "string",
                            "status": "string",
                            "upload_url": "string"
                        },
                        "readOnly": true,
                        "type": "object"
                    },
                    "format": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "format"
                ],
                "type": "object"
            },
            "ClusterExportJobSource": {
                "properties": {
                    "table": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "ClusterImportJob": {
                "properties": {
                    "azureblob": {
                        "$ref": "#/components/schemas/ClusterDataJobAzureBlob"
                    },
                    "cluster_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "compression": {
                        "default": "none",
                        "maxLength": 512,
                        "minLength": 0,
                        "nullable": true,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "destination": {
                        "$ref": "#/components/schemas/ClusterImportJobDestination"
                    },
                    "file": {
                        "$ref": "#/components/schemas/ClusterDataJobFile"
                    },
                    "format": {
                        "type": "string"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "progress": {
                        "example": {
                            "bytes": 0,
                            "details": {},
                            "failed_files": 0,
                            "failed_records": 0,
                            "message": "",
                            "percent": 0,
                            "processed_files": 0,
                            "records": 0,
                            "total_files": 0,
                            "total_records": 0
                        },
                        "readOnly": true,
                        "type": "object"
                    },
                    "s3": {
                        "$ref": "#/components/schemas/ClusterDataJobS3"
                    },
                    "schema": {
                        "nullable": true,
                        "type": "object"
                    },
                    "status": {
                        "enum": [
                            "REGISTERED",
                            "SENT",
                            "IN_PROGRESS",
                            "SUCCEEDED",
                            "FAILED"
                        ],
                        "example": "REGISTERED",
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "url": {
                        "$ref": "#/components/schemas/ClusterImportJobSourceURL"
                    }
                },
                "required": [
                    "destination",
                    "format",
                    "type"
                ],
                "type": "object"
            },
            "ClusterImportJobDestination": {
                "properties": {
                    "create_table": {
                        "default": true,
                        "type": "boolean"
                    },
                    "table": {
                        "type": "string"
                    },
                    "table_definition": {
                        "default": null,
                        "items": {
                            "$ref": "#/components/schemas/ClusterImportJobTableDefinition"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "table"
                ],
                "type": "object"
            },
            "ClusterImportJobSourceURL": {
                "properties": {
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "type": "object"
            },
            "ClusterImportJobTableDefinition": {
                "properties": {
                    "extra": {
                        "default": null,
                        "nullable": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "ClusterIpWhitelist": {
                "properties": {
                    "cidr": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "default": "",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "cidr"
                ],
                "type": "object"
            },
            "ClusterIpWhitelistEdit": {
                "properties": {
                    "ip_whitelist": {
                        "items": {
                            "$ref": "#/components/schemas/ClusterIpWhitelist"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ip_whitelist"
                ],
                "type": "object"
            },
            "ClusterJWTToken": {
                "properties": {
                    "expiry": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "refresh": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "token": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "expiry",
                    "refresh",
                    "token"
                ],
                "type": "object"
            },
            "ClusterPricing": {
                "properties": {
                    "price_per_hour": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "price_per_month": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "promotion_price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PricingPromotion"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "ClusterProduct": {
                "properties": {
                    "product_name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\-\\. ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "product_name"
                ],
                "type": "object"
            },
            "ClusterProvision": {
                "properties": {
                    "cluster": {
                        "$ref": "#/components/schemas/PartialCluster"
                    },
                    "project": {
                        "$ref": "#/components/schemas/PartialProject"
                    },
                    "project_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "subscription_id": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "cluster",
                    "subscription_id"
                ],
                "type": "object"
            },
            "ClusterScale": {
                "properties": {
                    "product_unit": {
                        "type": "integer"
                    }
                },
                "required": [
                    "product_unit"
                ],
                "type": "object"
            },
            "ClusterSnapshot": {
                "properties": {
                    "cluster_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "concrete_indices": {
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "created": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "project_id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "repository": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "snapshot": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "tables": {
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ClusterSnapshotRestore": {
                "properties": {
                    "repository": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "sections": {
                        "items": {
                            "maxLength": 512,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "snapshot": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "source_cluster_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "tables": {
                        "items": {
                            "maxLength": 512,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "default": "tables",
                        "type": "string"
                    }
                },
                "required": [
                    "repository",
                    "snapshot"
                ],
                "type": "object"
            },
            "ClusterStorageExpand": {
                "properties": {
                    "disk_size_per_node_bytes": {
                        "default": null,
                        "nullable": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ClusterSuspend": {
                "properties": {
                    "suspended": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "suspended"
                ],
                "type": "object"
            },
            "ClusterUpgrade": {
                "properties": {
                    "crate_version": {
                        "type": "string"
                    }
                },
                "required": [
                    "crate_version"
                ],
                "type": "object"
            },
            "ConfigurationItem": {
                "properties": {
                    "key": {
                        "maxLength": 512,
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 0,
                        "nullable": true,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "user_id": {
                        "maxLength": 36,
                        "minLength": 0,
                        "nullable": true,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "value": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ],
                "type": "object"
            },
            "ConfirmationToken": {
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "token"
                ],
                "type": "object"
            },
            "Consumption": {
                "properties": {
                    "cost": {
                        "type": "number"
                    },
                    "credits": {
                        "type": "number"
                    },
                    "dtuhours": {
                        "type": "number"
                    },
                    "minutes": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "ConsumptionPerProduct": {
                "properties": {
                    "consumption": {
                        "$ref": "#/components/schemas/Consumption"
                    },
                    "product_name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Container": {
                "properties": {
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "ContainersList": {
                "properties": {
                    "containers": {
                        "items": {
                            "$ref": "#/components/schemas/Container"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "error": {
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "secret_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "containers",
                    "error",
                    "secret_id"
                ],
                "type": "object"
            },
            "CrateDBChannels": {
                "properties": {
                    "nightly": {
                        "$ref": "#/components/schemas/NightlyCrateDBVersion"
                    },
                    "stable": {
                        "$ref": "#/components/schemas/CrateDBVersion"
                    },
                    "testing": {
                        "$ref": "#/components/schemas/CrateDBVersion"
                    }
                },
                "type": "object"
            },
            "CrateDBVersion": {
                "properties": {
                    "hotfix": {
                        "example": 1,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "major": {
                        "example": 4,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "minor": {
                        "example": 8,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "version": {
                        "example": "4.8.1",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CrateDBVersions": {
                "properties": {
                    "crate_versions": {
                        "$ref": "#/components/schemas/CrateDBChannels"
                    }
                },
                "type": "object"
            },
            "Credit": {
                "properties": {
                    "amount": {
                        "description": "Credit amount in USD cents",
                        "type": "number",
                        "writeOnly": true
                    },
                    "comment": {
                        "nullable": true,
                        "type": "string"
                    },
                    "expiration_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "original_amount": {
                        "description": "Credit amount in USD cents",
                        "example": 0,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "remaining_amount": {
                        "description": "Remaining credit amount in USD cents",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "start_date": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "ACTIVE",
                            "EXPIRED"
                        ],
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CurrentEstimatedCost": {
                "properties": {
                    "hourly": {
                        "additionalProperties": {
                            "type": "number"
                        },
                        "type": "object"
                    },
                    "monthly": {
                        "additionalProperties": {
                            "type": "number"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CurrentUser": {
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "hmac": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "idp": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "is_superuser": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_id": {
                        "deprecated": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_roles": {
                        "items": {
                            "$ref": "#/components/schemas/PartialOrganizationRoles"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "picture": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "project_roles": {
                        "items": {
                            "$ref": "#/components/schemas/PartialProjectRole"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "status": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "uid": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "type": "object"
            },
            "Customer": {
                "properties": {
                    "address": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerAddress"
                            }
                        ],
                        "readOnly": true
                    },
                    "city": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "country": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "line1": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "line2": {
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "organization_id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "tax": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerTax"
                            }
                        ],
                        "readOnly": true
                    },
                    "tax_id": {
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    },
                    "tax_id_type": {
                        "nullable": true,
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "city",
                    "country",
                    "email",
                    "line1",
                    "name",
                    "phone",
                    "postal_code"
                ],
                "type": "object"
            },
            "CustomerAddress": {
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "line1": {
                        "type": "string"
                    },
                    "line2": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomerCard": {
                "properties": {
                    "brand": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "country": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "default": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "exp_month": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "exp_year": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "last4": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomerTax": {
                "properties": {
                    "tax_id": {
                        "type": "string"
                    },
                    "tax_id_type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DataJobData": {
                "properties": {
                    "details": {
                        "nullable": true,
                        "type": "object"
                    },
                    "job_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "message": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "progress": {
                        "$ref": "#/components/schemas/Progress"
                    }
                },
                "required": [
                    "job_id",
                    "message",
                    "progress"
                ],
                "type": "object"
            },
            "Discount": {
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "label": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DublinCore": {
                "properties": {
                    "created": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "modified": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EditApiKeySchema": {
                "properties": {
                    "active": {
                        "type": "boolean",
                        "writeOnly": true
                    }
                },
                "type": "object"
            },
            "FeatureFlags": {
                "properties": {
                    "flags": {
                        "items": {
                            "$ref": "#/components/schemas/Flag"
                        },
                        "nullable": true,
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "File": {
                "properties": {
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "download_url": {
                        "format": "url",
                        "readOnly": true,
                        "type": "string"
                    },
                    "file_size": {
                        "description": "File size in bytes.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "PENDING",
                            "UPLOADED"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "upload_url": {
                        "format": "url",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "FileFeedback": {
                "properties": {
                    "bytes": {
                        "nullable": true,
                        "type": "integer"
                    },
                    "failed_records": {
                        "nullable": true,
                        "type": "integer"
                    },
                    "message": {
                        "maxLength": 512,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "percent": {
                        "nullable": true,
                        "type": "number"
                    },
                    "records": {
                        "type": "integer"
                    },
                    "status": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "total_records": {
                        "nullable": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "records",
                    "status"
                ],
                "type": "object"
            },
            "Flag": {
                "properties": {
                    "is_active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Guarantee": {
                "properties": {
                    "disk_space_bytes": {
                        "readOnly": true
                    },
                    "inserts_second": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "queries_second": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "storage_bytes": {
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "HardwareSpecs": {
                "properties": {
                    "cpus_per_node": {
                        "default": null,
                        "nullable": true,
                        "type": "number"
                    },
                    "disk_size_per_node_bytes": {
                        "default": null,
                        "nullable": true,
                        "type": "integer"
                    },
                    "disk_type": {
                        "default": null,
                        "maxLength": 512,
                        "minLength": 1,
                        "nullable": true,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "disks_per_node": {
                        "type": "integer"
                    },
                    "heap_size_bytes": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "memory_per_node_bytes": {
                        "default": null,
                        "nullable": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "IPAddress": {
                "properties": {
                    "ip": {
                        "description": "The IP address of the user",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InstallToken": {
                "properties": {
                    "token": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ],
                "type": "object"
            },
            "InvoiceConsumption": {
                "properties": {
                    "currency": {
                        "maxLength": 512,
                        "minLength": 0,
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "discounts": {
                        "items": {
                            "$ref": "#/components/schemas/Discount"
                        },
                        "type": "array"
                    },
                    "period_end": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "period_start": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "subtotal": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    },
                    "total_discount_amount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "JWK": {
                "properties": {
                    "keys": {
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "required": [
                    "keys"
                ],
                "type": "object"
            },
            "JWTRefreshToken": {
                "properties": {
                    "refresh_token": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh_token"
                ],
                "type": "object"
            },
            "LatestCrateVersion": {
                "properties": {
                    "nightly": {
                        "description": "The latest nightly CrateDB version. This can be deployed if the nightly channel is specified.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "stable": {
                        "description": "The latest stable CrateDB version. This will be used by default in all new deployments.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "testing": {
                        "description": "The latest testing CrateDB version. This can be deployed if the testing channel is specified.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Meta": {
                "properties": {
                    "crate_versions": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LatestCrateVersion"
                            }
                        ],
                        "readOnly": true
                    },
                    "version": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Version"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "NestedSecret": {
                "additionalProperties": true,
                "properties": {
                    "aws_secret": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AwsSecret"
                            }
                        ],
                        "writeOnly": true
                    },
                    "azure_secret": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AzureSecret"
                            }
                        ],
                        "writeOnly": true
                    }
                },
                "type": "object"
            },
            "NewApiKeyResponseSchema": {
                "properties": {
                    "key": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApiKey"
                            }
                        ],
                        "readOnly": true
                    },
                    "secret": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "success": {
                        "readOnly": true,
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "NewApiKeySchema": {
                "properties": {
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "key": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "last_used": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "secret": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "user_id": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NightlyCrateDBVersion": {
                "properties": {
                    "date": {
                        "example": "2023-05-24-00-02",
                        "readOnly": true,
                        "type": "string"
                    },
                    "hotfix": {
                        "example": 1,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "major": {
                        "example": 4,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "minor": {
                        "example": 8,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "version": {
                        "example": "4.8.1",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ObjectsList": {
                "properties": {
                    "error": {
                        "nullable": true,
                        "type": "string"
                    },
                    "objects": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "error",
                    "objects"
                ],
                "type": "object"
            },
            "Organization": {
                "properties": {
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "email": {
                        "description": "Notification email to use for the organization.",
                        "format": "email",
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "notifications_enabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "plan_type": {
                        "default": 3,
                        "description": "The support plan to use for the organization.",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "integer"
                    },
                    "project_count": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "role_fqn": {
                        "enum": [
                            "org_admin",
                            "org_member",
                            "project_admin",
                            "project_member"
                        ],
                        "example": "org_admin",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "OrganizationCurrentConsumptionSchema": {
                "properties": {
                    "compute_consumption_this_month": {
                        "items": {
                            "$ref": "#/components/schemas/ConsumptionPerProduct"
                        },
                        "type": "array"
                    },
                    "current_cost": {
                        "$ref": "#/components/schemas/CurrentEstimatedCost"
                    },
                    "storage_consumption_this_month": {
                        "$ref": "#/components/schemas/StorageConsumption"
                    }
                },
                "type": "object"
            },
            "OrganizationEdit": {
                "properties": {
                    "email": {
                        "description": "Notification email to use for the organization.",
                        "format": "email",
                        "nullable": true,
                        "type": "string"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "notifications_enabled": {
                        "type": "boolean"
                    },
                    "plan_type": {
                        "description": "The support plan to use for the organization.",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OrganizationInvitation": {
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "expiration_date": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_roles": {
                        "items": {
                            "$ref": "#/components/schemas/PartialOrganizationRoles"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "uid": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrganizationRemainingBudget": {
                "properties": {
                    "exclude_cluster_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string",
                        "writeOnly": true
                    },
                    "remaining_budget_per_month": {
                        "readOnly": true,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "OrganizationRole": {
                "properties": {
                    "added": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "invited": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "role_fqn": {
                        "enum": [
                            "org_admin",
                            "org_member"
                        ],
                        "type": "string"
                    },
                    "user": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "user_id": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "role_fqn",
                    "user"
                ],
                "type": "object"
            },
            "OrganizationUser": {
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "idp": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_roles": {
                        "items": {
                            "$ref": "#/components/schemas/PartialOrganizationRoles"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "picture": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "uid": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "type": "object"
            },
            "PartialCluster": {
                "properties": {
                    "channel": {
                        "default": "stable",
                        "type": "string"
                    },
                    "crate_version": {
                        "type": "string"
                    },
                    "hardware_specs": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HardwareSpecs"
                            }
                        ],
                        "default": null,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "x-maximum": "63",
                        "x-minimum": "3"
                    },
                    "password": {
                        "minLength": 24,
                        "type": "string",
                        "writeOnly": true
                    },
                    "product_name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\-\\. ]*$",
                        "type": "string"
                    },
                    "product_tier": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "product_unit": {
                        "default": 0,
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "crate_version",
                    "name",
                    "password",
                    "product_name",
                    "product_tier",
                    "username"
                ],
                "type": "object"
            },
            "PartialClusterAsyncOperation": {
                "properties": {
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PartialOrganizationRoles": {
                "properties": {
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "role_fqn": {
                        "enum": [
                            "org_admin",
                            "org_member"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "role_fqn"
                ],
                "type": "object"
            },
            "PartialProject": {
                "properties": {
                    "backup_location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProjectBackupLocation"
                            }
                        ],
                        "description": "Specify a custom backup location (custom s3 bucket) for a project. Supported in Edge regions only. ",
                        "nullable": true
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "region": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PartialProjectRole": {
                "properties": {
                    "project_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "role_fqn": {
                        "enum": [
                            "project_admin",
                            "project_member"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "role_fqn"
                ],
                "type": "object"
            },
            "PaymentMethod": {
                "properties": {
                    "card": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CustomerCard"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_available": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "is_setup": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "subscription": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Subscription"
                            }
                        ],
                        "readOnly": true
                    },
                    "subscription_id": {
                        "maxLength": 512,
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PricingPromotion": {
                "properties": {
                    "price_per_hour": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "price_per_month": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "promotion_duration": {
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "deprecated": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "guarantees_per_dtu": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Guarantee"
                            }
                        ],
                        "readOnly": true
                    },
                    "kind": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "label": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "offer": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "plan": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "price_per_dtu_minute": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "region": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "scale_summary": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "scaling": {
                        "items": {
                            "$ref": "#/components/schemas/ScaleOption"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "specs": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Spec"
                            }
                        ],
                        "readOnly": true
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "tier": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductPricing": {
                "properties": {
                    "cluster_price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClusterPricing"
                            }
                        ],
                        "readOnly": true
                    },
                    "storage_price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClusterPricing"
                            }
                        ],
                        "readOnly": true
                    },
                    "total_price": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClusterPricing"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Progress": {
                "properties": {
                    "bytes": {
                        "nullable": true,
                        "type": "integer"
                    },
                    "failed_files": {
                        "type": "integer"
                    },
                    "failed_records": {
                        "nullable": true,
                        "type": "integer"
                    },
                    "files": {
                        "items": {
                            "$ref": "#/components/schemas/FileFeedback"
                        },
                        "type": "array"
                    },
                    "percent": {
                        "nullable": true,
                        "type": "number"
                    },
                    "processed_files": {
                        "type": "integer"
                    },
                    "records": {
                        "type": "integer"
                    },
                    "total_files": {
                        "type": "integer"
                    },
                    "total_records": {
                        "nullable": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "records"
                ],
                "type": "object"
            },
            "Project": {
                "properties": {
                    "backup_location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProjectBackupLocation"
                            }
                        ],
                        "description": "Specify a custom backup location (custom s3 bucket) for a project. Supported in Edge regions only. ",
                        "nullable": true
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    },
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "region": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "organization_id"
                ],
                "type": "object"
            },
            "ProjectBackupLocation": {
                "properties": {
                    "additional_config": {
                        "example": {
                            "endpoint_url": "https://fra1.digitaloceanspaces.com"
                        },
                        "type": "object"
                    },
                    "credentials": {
                        "example": {
                            "access_key_id": "key",
                            "secret_access_key": "secret"
                        },
                        "type": "object",
                        "writeOnly": true
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "location": {
                        "example": "some-bucket-name",
                        "maxLength": 512,
                        "minLength": 1
                    },
                    "location_type": {
                        "enum": [
                            "s3"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "credentials",
                    "location",
                    "location_type"
                ],
                "type": "object"
            },
            "ProjectBackupLocationVerifyResponse": {
                "properties": {
                    "message": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "s3_location_valid": {
                        "readOnly": true,
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProjectEdit": {
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "ProjectRole": {
                "properties": {
                    "added": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "project_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "role_fqn": {
                        "enum": [
                            "project_admin",
                            "project_member"
                        ],
                        "type": "string"
                    },
                    "user": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "user_id": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "role_fqn",
                    "user"
                ],
                "type": "object"
            },
            "ProjectUser": {
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "idp": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "picture": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "project_roles": {
                        "items": {
                            "$ref": "#/components/schemas/PartialProjectRole"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "uid": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "type": "object"
            },
            "Promotion": {
                "properties": {
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "discount_percent": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "duration_months": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "plan_name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "plan_tier": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "scale_unit": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "valid_to": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Quota": {
                "properties": {
                    "code": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "current_value": {
                        "type": "number"
                    },
                    "quota": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Region": {
                "properties": {
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "deprecated": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "is_edge_region": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "last_seen": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "UP",
                            "DOWN",
                            "UNKNOWN"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "upgrade_available": {
                        "readOnly": true,
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RegionCreate": {
                "properties": {
                    "aws_bucket": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "aws_region": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\-\\. ]*$",
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "provider": {
                        "deprecated": true,
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "organization_id"
                ],
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ScaleOption": {
                "properties": {
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "disk_space_bytes": {
                        "readOnly": true
                    },
                    "dtus": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "inserts_second": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "nodes": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "price_per_minute": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "queries_second": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "storage_bytes": {
                        "readOnly": true
                    },
                    "value": {
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Secret": {
                "properties": {
                    "data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NestedSecret"
                            }
                        ],
                        "writeOnly": true
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "description": {
                        "maxLength": 512,
                        "minLength": 0,
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SetupIntent": {
                "properties": {
                    "client_secret": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SetupPaymentIntent": {
                "properties": {
                    "client_secret": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "payment_intent": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Spec": {
                "properties": {
                    "cpu_cores": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "ram_bytes": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "storage_bytes": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "storage_maximum_bytes": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "storage_minimum_bytes": {
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "StorageConsumption": {
                "properties": {
                    "cost": {
                        "type": "number"
                    },
                    "credits": {
                        "type": "number"
                    },
                    "dtuhours": {
                        "type": "number"
                    },
                    "gibhours": {
                        "type": "integer"
                    },
                    "minutes": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Subscription": {
                "properties": {
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "billing_model": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "dc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DublinCore"
                            }
                        ],
                        "readOnly": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "offer": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "offer_id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "plan": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "plan_id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "promotion": {
                        "example": {
                            "description": "Free CR0 Clusters",
                            "discount_percent": 100,
                            "duration_months": 3,
                            "id": "free-cr0-cluster",
                            "plan_name": "cr0",
                            "plan_tier": "default",
                            "scale_unit": 0,
                            "valid_to": null
                        },
                        "readOnly": true,
                        "type": "object"
                    },
                    "provider": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "provisioned": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "purchaser": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "reference": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "state": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "subscription_id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "subscription_provider": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubscriptionAssignOrg": {
                "properties": {
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "type": "object"
            },
            "SubscriptionCreate": {
                "properties": {
                    "organization_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    },
                    "type": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id",
                    "type"
                ],
                "type": "object"
            },
            "SubscriptionEdit": {
                "properties": {
                    "plan": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    },
                    "plan_id": {
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubscriptionProvision": {
                "properties": {
                    "cluster": {
                        "$ref": "#/components/schemas/PartialCluster"
                    },
                    "project": {
                        "$ref": "#/components/schemas/PartialProject"
                    },
                    "project_id": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                    }
                },
                "required": [
                    "cluster"
                ],
                "type": "object"
            },
            "User": {
                "properties": {
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "idp": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "organization_roles": {
                        "items": {
                            "$ref": "#/components/schemas/PartialOrganizationRoles"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "picture": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "project_roles": {
                        "items": {
                            "$ref": "#/components/schemas/PartialProjectRole"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "uid": {
                        "maxLength": 36,
                        "minLength": 36,
                        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "maxLength": 512,
                        "minLength": 1,
                        "pattern": "^\\w[\\w\\- ]*$",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "type": "object"
            },
            "ValidateCard": {
                "additionalProperties": false,
                "properties": {
                    "payment_intent": {
                        "type": "string"
                    }
                },
                "required": [
                    "payment_intent"
                ],
                "type": "object"
            },
            "Version": {
                "properties": {
                    "prerelease": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "release": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "info": {
        "title": "CrateDB Cloud API",
        "version": "1.0.0"
    },
    "openapi": "3.0.3",
    "paths": {
        "/api/v2/aws/subscriptions/{subscription_id}/": {
            "get": {
                "description": "This API has overrides for each of the billing providers. They are all the same.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return given subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieves subscription details",
                "tags": [
                    "Subscriptions"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return updated subscription"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Modify a subscription. Allows changing the plan.",
                "tags": [
                    "SaaS - AWS"
                ]
            }
        },
        "/api/v2/azure/subscriptions/{subscription_id}/": {
            "get": {
                "description": "This API has overrides for each of the billing providers. They are all the same.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return given subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieves subscription details",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/clusters/": {
            "get": {
                "description": "Superusers can use this to view all clusters. For regular users, what is returned depends on their permissions.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_subscription_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_project_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_clusters_product_name"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Cluster"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of clusters"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists all clusters visible to the current user",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/name/{name}/": {
            "head": {
                "description": "Helper endpoint to validate the availability and correctness of a cluster name.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Name is already taken."
                    },
                    "400": {
                        "description": "Invalid name. Name doesn't seem to be URL safe."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "description": "Name is available."
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Checks for availability of the given cluster name",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/": {
            "delete": {
                "description": "Subscription behavior depends on the provider. For Azure subscriptions, it will also cancel the subscription. Will always send the final usage reports as part of the deletion operation.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Deletes a cluster",
                "tags": [
                    "Clusters"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the given cluster"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns information about a cluster",
                "tags": [
                    "Clusters"
                ]
            },
            "patch": {
                "description": "Only changing the password is supported.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the updated cluster"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Allows changing some cluster details",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/available-products/": {
            "get": {
                "description": "Lists all the products that the specified cluster can be updated to.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": "Returns a list of available products"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List all the products a cluster can be updated to.",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/available-upgrades/": {
            "get": {
                "description": "Lists all the available CrateDB versions considered stable that the specified cluster\ncan be upgraded to.\nDowngrades are not supported.\nMajor version upgrades are not supported.\nMinor version upgrades are only supported to the immediately next minor version.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CrateDBVersions"
                                }
                            }
                        },
                        "description": "Return updated cluster"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List all the possible CrateDB versions a cluster can be directly upgraded to.",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/backup-schedule/": {
            "put": {
                "description": "Triggers a update backup schedule operation on the given cluster.\n\nCan change the backup hours of the clusters backup schedule. The payload needs to\ncontain new backup hours the cluster backup schedule should have.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterBackupSchedule"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the cluster.\n"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Change the backup hours of the cluster backup schedule.",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/deletion-protection/": {
            "put": {
                "description": "Allows to enable/disable deletion protection for a cluster. This is an additional safety feature. If deletion protection is enabled, the cluster cannot be deleted until it is disabled.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterDeletionProtection"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the updated cluster"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Controls a clusters deletion protection status",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/export-jobs/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ClusterExportJob"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns the list of export jobs"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists export jobs for the given cluster",
                "tags": [
                    "Clusters - Data jobs"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterExportJob"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterExportJob"
                                }
                            }
                        },
                        "description": "Returns the created export job"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Creates a new export job",
                "tags": [
                    "Clusters - Data jobs"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/export-jobs/{export_job_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_export_job_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Cancels an export job",
                "tags": [
                    "Clusters - Data jobs"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_export_job_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterExportJob"
                                }
                            }
                        },
                        "description": "Returns the given export job"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns information about an export job",
                "tags": [
                    "Clusters - Data jobs"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/import-jobs/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ClusterImportJob"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns the list of import jobs"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists import jobs for the given cluster",
                "tags": [
                    "Clusters - Data jobs"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterImportJob"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterImportJob"
                                }
                            }
                        },
                        "description": "Returns the created import job"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Creates a new import job",
                "tags": [
                    "Clusters - Data jobs"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/import-jobs/{import_job_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_import_job_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Cancels an import job",
                "tags": [
                    "Clusters - Data jobs"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_import_job_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterImportJob"
                                }
                            }
                        },
                        "description": "Returns the given import job"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns information about an import job",
                "tags": [
                    "Clusters - Data jobs"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/import-jobs/{import_job_id}/progress/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_import_job_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_files_limit"
                    },
                    {
                        "$ref": "#/components/parameters/query_files_offset"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataJobData"
                                }
                            }
                        },
                        "description": "Returns the import job's progress"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Shows progress of the given import job",
                "tags": [
                    "Clusters - Data jobs"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/ip-restrictions/": {
            "put": {
                "description": "Allows adding an array of CIDRs which are allowed to access the cluster. Any CIDR not included in one of the ranges provided will be prevented from accessing the cluster. Each time the API is called the old CIDR are overwritten with the CIDRs passed in the new payload.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterIpWhitelistEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the updated cluster"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Updates the clusters IP whitelist with the payload provided in the request",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/jwt/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterJWTToken"
                                }
                            }
                        },
                        "description": "Returns the JWT access and refresh token for this cluster"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Generate a JWT for cluster access (Grand Central)",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/metrics/{metric_id}/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_metric_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_start_ts"
                    },
                    {
                        "$ref": "#/components/parameters/query_end_ts"
                    },
                    {
                        "$ref": "#/components/parameters/query_minutes_ago"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "description": "Property names depend on the type of metrics.",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Returns metric data of a cluster for a given metric id"
                    },
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns metrics for a cluster",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/nodes/{ordinal}": {
            "delete": {
                "description": "In some cases, it might be required to bounce a CrateDB node, for example if there are stuck queries.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_ordinal"
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "apiVersion": {
                                            "example": "v1",
                                            "type": "string"
                                        },
                                        "code": {
                                            "example": 200,
                                            "type": "integer"
                                        },
                                        "kind": {
                                            "example": "Pod",
                                            "type": "string"
                                        },
                                        "status": {
                                            "example": "Success",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Returns the status of node deletion"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Restarts the given node in the cluster",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/operations/": {
            "get": {
                "description": "Returns a list of operations that belong to the specified cluster.\nCluster operations provide their state so they can be used, for instance, to determine\nif a cluster upgrade has been finished.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_statuses"
                    },
                    {
                        "$ref": "#/components/parameters/query_start"
                    },
                    {
                        "$ref": "#/components/parameters/query_end"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterAsyncOperationsList"
                                }
                            }
                        },
                        "description": "Returns a list of cluster operations."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List all the operations that belong to the specified cluster.",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/product/": {
            "put": {
                "description": "Triggers a change product operation on the given cluster.\n\nCan change the product of the cluster. The payload needs to contain the product\nname the cluster should changed to.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the cluster.\n"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Change the clusters product",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/scale/": {
            "put": {
                "description": "Triggers a scaling operation on the given cluster.\n\nCan scale the cluster up or down. The cluster's product type must support the given\nscale unit. Supported scale units can be retrieved from the Products API.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterScale"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the cluster. Note the product_unit and num_nodes fields will not\nbe updated until the cluster has successfully completed the scaling operation.\nTo monitor the progress of a scaling operation please use the operations cluster\nsubresource.\n"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Scales the cluster",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/snapshots/": {
            "get": {
                "description": "Allows listing the backups for the given cluster. This will list all historic snapshots, however only the last 2 weeks are kept by default in the actual backup location. Snapshots are returned in descending order (latest first).\nSnapshots are not rotated while a cluster is suspended.\nPlease note that while arbitrary time intervals can be passed to this API, it will only ever return a window of snapshots that is 2 weeks wide going back from the latest snapshot in the given time range.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_start_ts"
                    },
                    {
                        "$ref": "#/components/parameters/query_end_ts"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ClusterSnapshot"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns the list of snapshots taken on the cluster in descending order."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists snapshots (backups)",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/snapshots/restore/": {
            "post": {
                "description": "The repository and snapshot names can be retrieved from the Snapshots API.\n\nNote that for a snapshot restore operation to work, the table to be restored\nmust not exist (i.e. must be dropped first).\n\nThis will return immediately, but the restore operation might take some time,\ndepending on the size of the table being restored.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_target_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterSnapshotRestore"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterSnapshot"
                                }
                            }
                        },
                        "description": "Return restored snapshot"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Restores the given snapshot",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/storage/": {
            "put": {
                "description": "Triggers a storage expansion operation on the given cluster.\n\nThe cluster's product type must support custom storage.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterStorageExpand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the cluster. Note `disk_size_per_node_bytes` from hardware-specs fields will not\nbe updated until the cluster has successfully completed the operation.\nTo monitor the progress of an operation please use the operations cluster\nsubresource.\n"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Expands the cluster's storage",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/suspend/": {
            "put": {
                "description": "Triggers a suspend operation on the given cluster.\n\nCan suspend the cluster or reinstate it. The payload needs to contain the boolean if\nthe cluster should be suspended or reinstated. Only clusters with the products `cr1-4`\ncan be suspended.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterSuspend"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the cluster.\n"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Suspends the cluster",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/clusters/{cluster_id}/upgrade/": {
            "put": {
                "description": "Triggers an upgrade operation on the given cluster.\n\nThe given crate_version must be available in the same channel: i.e. it is not\npossible to upgrade from a stable version to a testing/nightly version.\n\nOnly minor and hotfix version upgrades are currently allowed.\n\nDowngrades are only supported to earlier hotfix releases.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_cluster_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterUpgrade"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the cluster. Note the crate_version field will not be updated until the cluster has successfully completed the upgrade operation. To monitor the progress of an upgrade operation please use the operations cluster subresource."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Upgrades a cluster",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/configurations/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConfigurationItem"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns the configurations"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns a list of available configurations",
                "tags": [
                    "Configurations"
                ]
            }
        },
        "/api/v2/configurations/{key}/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_configuration_key"
                    },
                    {
                        "$ref": "#/components/parameters/query_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigurationItem"
                                }
                            }
                        },
                        "description": "Returns the configuration"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns the value of a configuration key",
                "tags": [
                    "Configurations"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_configuration_key"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfigurationItem"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigurationItem"
                                }
                            }
                        },
                        "description": "Returns the configuration"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Set the value of a configuration key",
                "tags": [
                    "Configurations"
                ]
            }
        },
        "/api/v2/features/status/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeatureFlags"
                                }
                            }
                        },
                        "description": "Returns the feature flags"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns the feature flags",
                "tags": [
                    "Feature flags"
                ]
            }
        },
        "/api/v2/gcp/subscriptions/{subscription_id}/": {
            "get": {
                "description": "This API has overrides for each of the billing providers. They are all the same.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return given subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieves subscription details",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/integrations/aws/s3-buckets/": {
            "get": {
                "description": "Lists all the S3 buckets the given organization secret_id has access to.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_secret_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_endpoint"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BucketsList"
                                }
                            }
                        },
                        "description": "Returns a list of S3 buckets that can be used to import data. If the attempt to gather the bucket names failed, an error message is provided describing the reason."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List all the S3 buckets the given organization secret_id has access to.",
                "tags": [
                    "Integrations"
                ]
            }
        },
        "/api/v2/integrations/aws/s3-objects/": {
            "get": {
                "description": "List all the S3 objects in a specific bucket.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_secret_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_endpoint"
                    },
                    {
                        "$ref": "#/components/parameters/query_bucket"
                    },
                    {
                        "$ref": "#/components/parameters/query_prefix"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectsList"
                                }
                            }
                        },
                        "description": "List all the S3 objects in a specific bucket. If the attempt to gather the objects names failed, an error message is provided describing the reason. The results can be filtered by prefix. Returns maximum 1000 files."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List all the S3 objects in a specific bucket.",
                "tags": [
                    "Integrations"
                ]
            }
        },
        "/api/v2/integrations/azure/blob-storage-containers/": {
            "get": {
                "description": "Lists all the Azure Blob Storage containers the given organization secret_id has\naccess to.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_azure_secret_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContainersList"
                                }
                            }
                        },
                        "description": "Returns a list of Azure Blob Storage containers that can be used to import data. If the attempt to gather the container names failed, an error message is provided describing the reason."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List all the Azure Blob Storage containers the given organization secret_id has access to.",
                "tags": [
                    "Integrations"
                ]
            }
        },
        "/api/v2/integrations/azure/blobs/": {
            "get": {
                "description": "List all the Azure Blob Storage blobs in a specific container.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_azure_secret_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_azure_container_name"
                    },
                    {
                        "$ref": "#/components/parameters/query_azure_prefix"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlobsList"
                                }
                            }
                        },
                        "description": "Returns a list of Azure Blob Storage blobs in a specific container. If the attempt to gather the blobs names failed, an error message is provided describing the reason. Returns maximum 5000 files."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List all the Azure Blob Storage blobs in a specific container.",
                "tags": [
                    "Integrations"
                ]
            }
        },
        "/api/v2/meta/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            }
                        },
                        "description": "Returns metadata indicating available CrateDB versions and the currently running API version."
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get version metadata",
                "tags": [
                    "Metadata"
                ]
            }
        },
        "/api/v2/meta/cratedb-versions/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CrateDBVersions"
                                }
                            }
                        },
                        "description": "Returns the list of available CrateDB versions usable in CrateDB Cloud."
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get all stable CrateDB versions.",
                "tags": [
                    "Metadata"
                ]
            }
        },
        "/api/v2/meta/ip-address/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IPAddress"
                                }
                            }
                        },
                        "description": "Returns the visitor's IP address"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get IP address of visitor",
                "tags": [
                    "Metadata"
                ]
            }
        },
        "/api/v2/meta/jwk/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JWK"
                                }
                            }
                        },
                        "description": "Returns the list of JWK public keys used for verifying JWT tokens signed by CrateDB Cloud."
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get JWKS for CrateDB Cloud",
                "tags": [
                    "Metadata"
                ]
            }
        },
        "/api/v2/meta/jwt/refresh/": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JWTRefreshToken"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClusterJWTToken"
                                }
                            }
                        },
                        "description": "Returns the created access token."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Generate a new JWT access token for a given refresh token (Grand Central)",
                "tags": [
                    "Metadata"
                ]
            }
        },
        "/api/v2/organizations/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns a list of organizations."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of organizations the user is a member of",
                "tags": [
                    "Organizations"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": "Returns the created organization."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create an organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Delete an organization",
                "tags": [
                    "Organizations"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": "Returns details of given organization"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get organization details",
                "tags": [
                    "Organizations"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": "Returns details of updated organization"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Update organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/auditlogs/": {
            "get": {
                "description": "Expose the audit logs for an organization in descending order of their date.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_from_ts"
                    },
                    {
                        "$ref": "#/components/parameters/query_to_ts"
                    },
                    {
                        "$ref": "#/components/parameters/query_auditlog_action"
                    },
                    {
                        "$ref": "#/components/parameters/query_auditlog_cluster_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_last"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AuditEvent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns the list of audit logs"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists the audit logs for an organization",
                "tags": [
                    "Audit"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/clusters/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_subscription_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_project_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_clusters_product_name"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Cluster"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns the list of clusters"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists clusters in the given Organization",
                "tags": [
                    "Clusters"
                ]
            },
            "post": {
                "description": "Provision a new cluster, optionally creating a project as well. A valid subscription must be provided, or a cluster can be provisioned by a superuser w/o a subscription.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClusterProvision"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cluster"
                                }
                            }
                        },
                        "description": "Returns the created cluster"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Provisions a cluster",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/consumption/current-month/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationCurrentConsumptionSchema"
                                }
                            }
                        },
                        "description": "Get the organization's current month consumption and cost, as well as a cost estimation."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get information on the current natural month cost and usage, as well as cost estimations.",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/credits/": {
            "get": {
                "description": "List of credits per organization.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_credit_status"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Credit"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return organization's credits"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List of credits.",
                "tags": [
                    "Organizations - Credits"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credit"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credit"
                                }
                            }
                        },
                        "description": "Returns the created credit."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create a credit",
                "tags": [
                    "Organizations - Credits"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/credits/{credit_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_credit_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Delete a credit",
                "tags": [
                    "Organizations - Credits"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_credit_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credit"
                                }
                            }
                        },
                        "description": "Returns details of updated credit"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Update credit",
                "tags": [
                    "Organizations - Credits"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/customer/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "description": "Returns the organization's billing informations."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieve organization's billing informations",
                "tags": [
                    "Organizations"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "description": "Returns the organization's billing informations."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Edit organization's billing informations",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/files/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/File"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns a list of the organization's files."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of files uploaded into the organization",
                "tags": [
                    "Organizations - Files"
                ]
            },
            "post": {
                "description": "This creates a pre-signed URL to be used to upload files into CrateDB Cloud.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/File"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": "Returns the file placeholder with the pre-signed URL for upload."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Sets up a file upload",
                "tags": [
                    "Organizations - Files"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/files/{file_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_file_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Delete a file",
                "tags": [
                    "Organizations - Files"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_file_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": "Returns details of given file"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get file details",
                "tags": [
                    "Organizations - Files"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/invitations/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_invite_status"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationInvitation"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns a list of organization invitations. A status filter can be used. Note expired and non-expired invitations will be returned when filtering by PENDING status."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of user invitations related to the organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/invitations/{invite_token}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_invite_token"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Delete a user invite to the organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/metrics/prometheus/": {
            "get": {
                "description": "This exposes a Prometheus-compatible endpoint that can be configured as a scrape target in a Prometheus instance. Please note that this API is rate-limited to one request per minute. You may configure a higher scrape interval, but will not receive updated data more than once a minute.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "plain/text": {
                                "schema": {
                                    "additionalProperties": true,
                                    "description": "Prometheus metrics.",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returns cluster metric data of an organization"
                    },
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns prometheus metrics for the clusters of an organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/payment-methods/": {
            "get": {
                "description": "A payment method is a way of paying for your CrateDB Cloud cluster. It is sometimes used interchangeably to refer to a subscription, but that is not entirely true. In the case of Stripe, you're actually paying with a specific credit card.\nThis encapsulates all the business logic around what payment methods are available and shown to the user.\nWhen deploying clusters, a specific subscription still needs to be specified.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentMethod"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of payment methods."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists payment methods belonging to this Organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/projects/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns list of projects"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of projects the user is a member of filtered by organization",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/quotas/": {
            "get": {
                "description": "Quotas provide limits to some actions. This endpoint returns a list of the quotas that apply to the given organization, with the current value and the quota value for each.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Quota"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of quotas"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists all quotas for the given organization",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/regions/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Region"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of regions"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists all regions visible to the current user by organization",
                "tags": [
                    "Regions"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/remaining-budget/": {
            "get": {
                "description": "Returns the remaining monthly budget an organization can spend for deploying new clusters or scaling up existing clusters.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_exclude_cluster_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRemainingBudget"
                                }
                            }
                        },
                        "description": "Returns the remaining budget"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns the remaining budget of an organization.",
                "tags": [
                    "Organizations"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/secrets/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Secret"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns a list of secrets that belong to an organization."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of secrets stored within an organization.",
                "tags": [
                    "Organizations - Secrets"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Secret"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Secret"
                                }
                            }
                        },
                        "description": "Returns the created secret."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create a secret within an organization",
                "tags": [
                    "Organizations - Secrets"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/secrets/{secret_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_organization_secret_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Delete a secret",
                "tags": [
                    "Organizations - Secrets"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/subscriptions/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of subscriptions"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists subscriptions belonging to an organization",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/users/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationUser"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns a list of organization users"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of users assigned to the organization",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationRole"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "added": false,
                                    "organization_id": "7bbcf777-7755-41e0-a0b9-5df748b81c0a",
                                    "role_fqn": "org_admin",
                                    "user_id": "c4953d0d-f360-4820-9c43-0b8889fe769a"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRole"
                                }
                            }
                        },
                        "description": "User role has been updated successfully"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "added": true,
                                    "organization_id": "7bbcf777-7755-41e0-a0b9-5df748b81c0a",
                                    "role_fqn": "org_admin",
                                    "user_id": "c4953d0d-f360-4820-9c43-0b8889fe769a"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRole"
                                }
                            }
                        },
                        "description": "User role has been added successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Add or update organization roles of a user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/organizations/{organization_id}/users/{user_id_or_email}/": {
            "delete": {
                "description": "The last organization admin cannot be removed from an organization.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_user_id_or_email"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Remove a user by id or email from an organization",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/products/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_product_tier"
                    },
                    {
                        "$ref": "#/components/parameters/query_product_name"
                    },
                    {
                        "$ref": "#/components/parameters/query_product_plan"
                    },
                    {
                        "$ref": "#/components/parameters/query_product_offer"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of products"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Return a list of available products",
                "tags": [
                    "Products"
                ]
            }
        },
        "/api/v2/products/clusters/price": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_specific_product_plan"
                    },
                    {
                        "$ref": "#/components/parameters/query_specific_product_offer"
                    },
                    {
                        "$ref": "#/components/parameters/query_specific_product_name"
                    },
                    {
                        "$ref": "#/components/parameters/query_specific_product_tier"
                    },
                    {
                        "$ref": "#/components/parameters/query_specific_product_unit"
                    },
                    {
                        "$ref": "#/components/parameters/query_region"
                    },
                    {
                        "$ref": "#/components/parameters/query_storage_bytes"
                    },
                    {
                        "$ref": "#/components/parameters/query_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductPricing"
                                }
                            }
                        },
                        "description": "Returns the price of a specific product"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "summary": "Returns the price of the given product specification.",
                "tags": [
                    "Products"
                ]
            }
        },
        "/api/v2/products/{kind}/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_product_kind"
                    },
                    {
                        "$ref": "#/components/parameters/query_product_tier"
                    },
                    {
                        "$ref": "#/components/parameters/query_product_name"
                    },
                    {
                        "$ref": "#/components/parameters/query_product_plan"
                    },
                    {
                        "$ref": "#/components/parameters/query_product_offer"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of products"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Return a list of available products, filtering by kind",
                "tags": [
                    "Products"
                ]
            }
        },
        "/api/v2/projects/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns list of projects"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of projects the user is a member of",
                "tags": [
                    "Projects"
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": "Returns created project"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create a project",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/api/v2/projects/{project_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_project_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Delete a project",
                "tags": [
                    "Projects"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_project_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": "Returns details of given project"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get project details",
                "tags": [
                    "Projects"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_project_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": "Returns details of updated project"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Update the name of a project",
                "tags": [
                    "Projects"
                ]
            }
        },
        "/api/v2/projects/{project_id}/clusters/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_project_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_subscription_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_clusters_product_name"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Cluster"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns the list of clusters"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists clusters in the given Project",
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v2/projects/{project_id}/users/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_project_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectUser"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns list of project users"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of users assigned to the project",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_project_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectRole"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "added": false,
                                    "project_id": "8a6a2a85-911e-423c-9f0a-a042acb22cf0",
                                    "role_fqn": "project_admin",
                                    "user_id": "c4953d0d-f360-4820-9c43-0b8889fe769a"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectRole"
                                }
                            }
                        },
                        "description": "User role has been updated successfully"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "added": true,
                                    "project_id": "8a6a2a85-911e-423c-9f0a-a042acb22cf0",
                                    "role_fqn": "project_admin",
                                    "user_id": "c4953d0d-f360-4820-9c43-0b8889fe769a"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectRole"
                                }
                            }
                        },
                        "description": "User role has been added successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Add or update project roles of a user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/projects/{project_id}/users/{user_id_or_email}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_project_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_user_id_or_email"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Remove a user by id or email from a project",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/regions/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Region"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of regions"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists all regions visible to the current user by organization",
                "tags": [
                    "Regions"
                ]
            },
            "post": {
                "description": "Regular users can only create Edge regions within their organization.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        },
                        "description": "Returns the created region"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Creates a region",
                "tags": [
                    "Regions"
                ]
            }
        },
        "/api/v2/regions/{region_name}/": {
            "delete": {
                "description": "Deletion is only possible for Edge regions that are not connected to CrateDB Cloud and have no resources deployed (projects or clusters).\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_region_name"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Deletes an Edge region",
                "tags": [
                    "Regions"
                ]
            }
        },
        "/api/v2/regions/{region_name}/install-token/": {
            "get": {
                "description": "An installation token is used to authenticate with CrateDB Cloud from the command line when installing an edge region. They are valid for 24 hours.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_region_name"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstallToken"
                                }
                            }
                        },
                        "description": "Returns the generated install token"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Generates an install token for an Edge region",
                "tags": [
                    "Regions"
                ]
            }
        },
        "/api/v2/regions/{region_name}/verify-backup-location/": {
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_region_name"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectBackupLocation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectBackupLocationVerifyResponse"
                                }
                            }
                        },
                        "description": "Returns the result of the verification"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Verifies backup location details. Supported in Edge regions only.",
                "tags": [
                    "Regions"
                ]
            }
        },
        "/api/v2/roles/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns list of roles"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Get a list of roles which can be assigned to a user",
                "tags": [
                    "Roles"
                ]
            }
        },
        "/api/v2/stripe/bank-transfer/organizations/{organization_id}/setup/": {
            "post": {
                "description": "Setup Stripe subscription to pay by bank transfer\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Setup Stripe bank transfer subscription",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/card/organizations/{organization_id}/setup-payment/": {
            "post": {
                "description": "This is used by the UI when showing the \"Add CC\" form. The client secret returned\nby this API is used by the Stripe JS library to request that a card be added\nto this customer's account as well as a test $1 charge to make sure the card is valid.\nOnce the UI marks the PaymentIntent as completed it must call /validate-card/ endpoint\nto refund the charge and mark the card as valid.\n\nWe do not store any card details.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetupPaymentIntent"
                                }
                            }
                        },
                        "description": "Return created setup payment intent"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create a Stripe PaymentIntent",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/card/organizations/{organization_id}/setup/": {
            "post": {
                "description": "This is used by the UI when showing the \"Add CC\" form. The client secret returned\nby this API is used by the Stripe JS library to request that a card be added\nto this customer's account.\n\nWe do not store any card details.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetupIntent"
                                }
                            }
                        },
                        "description": "Return created setup intent"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create a Stripe SetupIntent",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/organizations/{organization_id}/billing-information/": {
            "get": {
                "deprecated": true,
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingInformation"
                                }
                            }
                        },
                        "description": "Return billing information details"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieve billing info",
                "tags": [
                    "SaaS - Stripe"
                ]
            },
            "patch": {
                "deprecated": true,
                "description": "Allows editing the customers billing info (address etc.).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillingInformation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingInformation"
                                }
                            }
                        },
                        "description": "Return updated billing information"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Edit billing information",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/organizations/{organization_id}/cards/": {
            "get": {
                "description": "We do not store any card info ourselves, this API always goes direct to Stripe.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerCard"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of customer cards"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List customers cards on file with Stripe",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/organizations/{organization_id}/cards/{card_id}/": {
            "delete": {
                "description": "You cannot delete the last card on file.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_card_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCard"
                                }
                            }
                        },
                        "description": "Return deleted customer card"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Delete a previously registered card",
                "tags": [
                    "SaaS - Stripe"
                ]
            },
            "patch": {
                "description": "This only allows setting the card as default. It is not possible to update any other card details (CVV, expiry date...). A new card must be added instead.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    },
                    {
                        "$ref": "#/components/parameters/path_card_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardEdit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCard"
                                }
                            }
                        },
                        "description": "Return updated customer card"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Update a card on file with Stripe",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/organizations/{organization_id}/setup-payment/": {
            "post": {
                "deprecated": true,
                "description": "Please use /api/v2/stripe/card/organizations/{organization_id}/setup-payment/ instead.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetupPaymentIntent"
                                }
                            }
                        },
                        "description": "Return created setup payment intent"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create a Stripe PaymentIntent",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/organizations/{organization_id}/setup/": {
            "post": {
                "deprecated": true,
                "description": "Please use /api/v2/stripe/card/organizations/{organization_id}/setup/ instead.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetupIntent"
                                }
                            }
                        },
                        "description": "Return created setup intent"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Create a Stripe SetupIntent",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/organizations/{organization_id}/validate-card/": {
            "post": {
                "description": "This is used by the UI when submitting the \"Add CC\" form. If the PaymentIntent\nwas successfully completed this endpoint refunds the PaymentIntent and marks the card\nas validated so that it can be used with subscriptions.\n\nWe do not store any card details.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateCard"
                                }
                            }
                        },
                        "description": "Card validated. Returns all the Stripe cards associated to the customer."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Validates a Stripe card that has been charged with a Setup PaymentIntent.",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/promotions/": {
            "get": {
                "description": "If any promotions are applicable, they will be returned here. Note that only one promotion can be active per organization, and if one already is - this API will return nothing.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Promotion"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of stripe promotions"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "List promotions applicable to this organization",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/subscriptions/{subscription_id}/": {
            "delete": {
                "description": "BE CAREFUL! This will delete any clusters that the customer has running in this Subscription. Will also send the final usage reports.\nCancelling the subscription will mean that the outstanding amount due will be collected immediately.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return deleted subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Cancel a Stripe subscription",
                "tags": [
                    "SaaS - Stripe"
                ]
            },
            "get": {
                "description": "This API has overrides for each of the billing providers. They are all the same.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return given subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieves subscription details",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/stripe/subscriptions/{subscription_id}/invoices/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    },
                    {
                        "$ref": "#/components/parameters/query_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/InvoiceConsumption"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns past invoices, including consumption information."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieve invoices",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/stripe/subscriptions/{subscription_id}/invoices/upcoming/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceConsumption"
                                }
                            }
                        },
                        "description": "Returns consumption details for the upcoming invoice"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieve upcoming invoice details",
                "tags": [
                    "SaaS - Stripe"
                ]
            }
        },
        "/api/v2/subscriptions/": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query_organization_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Return list of subscriptions"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists subscriptions belonging to an organization",
                "tags": [
                    "Subscriptions"
                ]
            },
            "post": {
                "description": "Must be called before attempting to deploy a cluster or adding credit card details.\n",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return created subscription"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Creates a pending Stripe-based subscription.",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/subscriptions/{subscription_id}/": {
            "delete": {
                "description": "BE CAREFUL! This will delete any clusters that the customer has running in this Subscription. For Stripe it will also send the final usage reports.\nCancelling the subscription will mean that the outstanding amount due will be collected immediately.\nThis works only for subscriptions of type 'contract' or 'stripe'.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return deleted subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Cancel a subscription",
                "tags": [
                    "Subscriptions"
                ]
            },
            "get": {
                "description": "This API has overrides for each of the billing providers. They are all the same.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return given subscription"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Retrieves subscription details",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/subscriptions/{subscription_id}/assign-org/": {
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionAssignOrg"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        },
                        "description": "Return updated subscription with the assigned organization"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Allows setting an org for a Subscription (only used by Azure)",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/subscriptions/{subscription_id}/wizard-redirect/": {
            "get": {
                "description": "This may be unused as there's no obvious usages, and it doesn't seem to be configured in either Azure or AWS marketplaces.\n",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_subscription_id"
                    }
                ],
                "responses": {
                    "302": {
                        "content": {
                            "text/html": {
                                "example": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"> <title>Redirecting...</title> <h1>Redirecting...</h1> <p>You should be redirected automatically to target URL: <a href=\"{target_url}\">{location}</a>.  If not click the link."
                            }
                        },
                        "description": "Redirect to wizard page",
                        "headers": {
                            "Location": {
                                "description": "Location of redirect page",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Performs a redirect to the deployment wizard",
                "tags": [
                    "Subscriptions"
                ]
            }
        },
        "/api/v2/users/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Returns a list of users"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "[Superusers only] Returns the list of users in the system",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/users/me/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUser"
                                }
                            }
                        },
                        "description": "Returns the details of the current user"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns details of the current user",
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrentUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUser"
                                }
                            }
                        },
                        "description": "Returns the details of the updated user"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "example": "A confirmation email was sent. Please follow its instructions to verify your new email address.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "example": "pending",
                                            "type": "string"
                                        },
                                        "success": {
                                            "default": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Updates email address of the current user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/users/me/accept-invite/": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmationToken"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "added": false,
                                    "organization_id": "7bbcf777-7755-41e0-a0b9-5df748b81c0a",
                                    "role_fqn": "org_admin",
                                    "user_id": "c4953d0d-f360-4820-9c43-0b8889fe769a"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRole"
                                }
                            }
                        },
                        "description": "User role has been updated successfully"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "added": true,
                                    "organization_id": "7bbcf777-7755-41e0-a0b9-5df748b81c0a",
                                    "role_fqn": "org_admin",
                                    "user_id": "c4953d0d-f360-4820-9c43-0b8889fe769a"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRole"
                                }
                            }
                        },
                        "description": "User role has been added successfully"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Accept an invitation to an organization received via email, validated via an expirable token",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/users/me/api-keys/": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/NewApiKeySchema"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Lists the Api keys belonging to the current user. It never displays the secret."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Lists the Api keys belonging to the current user",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewApiKeyResponseSchema"
                                }
                            }
                        },
                        "description": "Creates a new API key for the current user and returns it along with its secret."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Creates a new API key for the current user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/users/me/api-keys/{api_key}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_api_key"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deletes an API key belonging to the current user, specified by its key."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Deletes an API key belonging to the current user, specified by its key.",
                "tags": [
                    "Users"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_api_key"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewApiKeySchema"
                                }
                            }
                        },
                        "description": "Returns a specific API key belonging to the current user, identified by its key. It never displays the secret."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Returns a specific API key belonging to the current user, identified by its key.",
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_api_key"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditApiKeySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewApiKeySchema"
                                }
                            }
                        },
                        "description": "Allows switching the `active` flag of the specified API key for the current user."
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Allows switching the `active` flag of the specified API key for the current user",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/users/me/confirm-email/": {
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmationToken"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUser"
                                }
                            }
                        },
                        "description": "Returns the details of the updated user"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "Confirm new email address by sending validation token",
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/v2/users/{user_id}/": {
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/path_user_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "summary": "[Superusers only] Delete a user",
                "tags": [
                    "Users"
                ]
            }
        }
    },
    "tags": [
        {
            "description": "APIs for interacting with Organizations.",
            "name": "Organizations"
        },
        {
            "description": "APIs listing usage Credits.",
            "name": "Organizations - Credits"
        },
        {
            "description": "APIs listing uploaded files to import in the DB.",
            "name": "Organizations - Files"
        },
        {
            "description": "APIs listing organization's secrets.",
            "name": "Organizations - Secrets"
        },
        {
            "description": "APIs for interacting with Regions.",
            "name": "Regions"
        },
        {
            "description": "APIs for interacting with Projects.",
            "name": "Projects"
        },
        {
            "description": "APIs for cluster operations.",
            "name": "Clusters"
        },
        {
            "description": "APIs for import and export jobs operations.",
            "name": "Clusters - Data jobs"
        },
        {
            "description": "APIs for listing Products.",
            "name": "Products"
        },
        {
            "description": "APIs for interacting with Users.",
            "name": "Users"
        },
        {
            "description": "APIs for interacting with User Roles.",
            "name": "Roles"
        },
        {
            "description": "APIs for interacting with subscriptions.",
            "name": "Subscriptions"
        },
        {
            "description": "APIs for interacting with Stripe.",
            "name": "SaaS - Stripe"
        },
        {
            "description": "APIs for interacting with Azure.",
            "name": "SaaS - Azure"
        },
        {
            "description": "APIs for interacting with AWS.",
            "name": "SaaS - AWS"
        },
        {
            "description": "APIs for viewing Audit Logs.",
            "name": "Audit"
        },
        {
            "description": "APIs for CrateDB Cloud Metadata.",
            "name": "Metadata"
        },
        {
            "description": "APIs for CrateDB Cloud Configurations.",
            "name": "Configurations"
        }
    ]
}
